{
	"id": "56244cbca71f9bb54994c1403ae86703",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"FCC2.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract Staking {\r\n\r\n    IERC20 public token;  // The token being staked\r\n    uint256 public stakingPoolBalance;  // The staking pool balance\r\n    address public stakingWallet;  // The address receiving staking rewards\r\n\r\n    mapping(address => uint256) public stakedBalances;  // User staked balance\r\n    mapping(address => uint256) public stakingTimestamps;  // Timestamp of user's stake\r\n\r\n    uint256 public constant APR = 30;  // Annual Percentage Rate for rewards (30%)\r\n\r\n    event Unstake(address indexed user, uint256 stakedAmount, uint256 reward);\r\n\r\n    constructor(address _token, address _stakingWallet) {\r\n        token = IERC20(_token);\r\n        stakingWallet = _stakingWallet;\r\n    }\r\n\r\n    // Unstake function: Unstakes tokens and transfers rewards\r\n    function unstake() external {\r\n        uint256 stakedAmount = stakedBalances[msg.sender];\r\n        require(stakedAmount > 0, \"No tokens staked\");\r\n\r\n        uint256 stakingDuration = block.timestamp - stakingTimestamps[msg.sender];\r\n        uint256 reward = calculateRewards(stakedAmount, stakingDuration);\r\n\r\n        // Ensure the staking pool has enough balance for the reward\r\n        require(stakingPoolBalance >= reward, \"Insufficient staking pool balance\");\r\n\r\n        // Update staking pool balance\r\n        stakingPoolBalance -= reward;\r\n\r\n        // Reset user staking data\r\n        stakedBalances[msg.sender] = 0;\r\n        stakingTimestamps[msg.sender] = 0;\r\n\r\n        // Transfer staked amount + reward from the contract to the user\r\n        token.transfer(msg.sender, stakedAmount);\r\n        token.transfer(stakingWallet, reward);\r\n\r\n        // Emit Unstake event\r\n        emit Unstake(msg.sender, stakedAmount, reward);\r\n    }\r\n\r\n    // Calculate staking rewards based on the staking duration\r\n    function calculateRewards(uint256 stakedAmount, uint256 duration) internal pure returns (uint256) {\r\n        uint256 yearlyReward = (stakedAmount * APR) / 100;\r\n        return (yearlyReward * duration) / (365 days);  // Linear reward calculation\r\n    }\r\n\r\n    // Function to allow users to stake tokens (just for context)\r\n    function stake(uint256 amount) external {\r\n        require(amount > 0, \"Amount must be greater than zero\");\r\n\r\n        // Transfer tokens to the contract\r\n        token.transferFrom(msg.sender, address(this), amount);\r\n\r\n        // Update staking balance and timestamp\r\n        stakedBalances[msg.sender] += amount;\r\n        stakingTimestamps[msg.sender] = block.timestamp;\r\n\r\n        // Increase the staking pool balance\r\n        stakingPoolBalance += calculateRewards(amount, 0);  // Reward for the future staking duration\r\n    }\r\n}\r\n\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"FCC2.sol": {
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_stakingWallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakedAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "Unstake",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "APR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakedBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingPoolBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakingTimestamps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"FCC2.sol\":120:2764  contract Staking {... */\n  mstore(0x40, 0x80)\n    /* \"FCC2.sol\":686:820  constructor(address _token, address _stakingWallet) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"FCC2.sol\":749:754  token */\n  0x00\n    /* \"FCC2.sol\":749:771  token = IERC20(_token) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"FCC2.sol\":782:795  stakingWallet */\n  0x02\n    /* \"FCC2.sol\":782:812  stakingWallet = _stakingWallet */\n  dup1\n  sload\n  swap3\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"FCC2.sol\":120:2764  contract Staking {... */\n  jump(tag_8)\n    /* \"#utility.yul\":14:191   */\ntag_7:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_10:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_12\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_12:\n    /* \"#utility.yul\":375:415   */\n  tag_13\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_7\n  jump\t// in\ntag_13:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_14\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_7\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\ntag_8:\n    /* \"FCC2.sol\":120:2764  contract Staking {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"FCC2.sol\":120:2764  contract Staking {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa694fc3a\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xbd30558e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xfc1c0850\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x06ee6ad8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1460fa87\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2def6620\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x937b983b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"FCC2.sol\":268:296  address public stakingWallet */\n    tag_3:\n      sload(0x02)\n      tag_12\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_12:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"FCC2.sol\":268:296  address public stakingWallet */\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FCC2.sol\":347:396  mapping(address => uint256) public stakedBalances */\n    tag_4:\n      tag_16\n      tag_17\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_17:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_16:\n      mload(0x40)\n        /* \"#utility.yul\":659:684   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":647:649   */\n      0x20\n        /* \"#utility.yul\":632:650   */\n      add\n        /* \"FCC2.sol\":347:396  mapping(address => uint256) public stakedBalances */\n      tag_14\n        /* \"#utility.yul\":513:690   */\n      jump\n        /* \"FCC2.sol\":892:1831  function unstake() external {... */\n    tag_5:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      stop\n        /* \"FCC2.sol\":427:479  mapping(address => uint256) public stakingTimestamps */\n    tag_6:\n      tag_16\n      tag_25\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_25:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"FCC2.sol\":2230:2761  function stake(uint256 amount) external {... */\n    tag_7:\n      tag_22\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n        /* \"FCC2.sol\":518:550  uint256 public constant APR = 30 */\n    tag_8:\n      tag_16\n        /* \"FCC2.sol\":548:550  30 */\n      0x1e\n        /* \"FCC2.sol\":518:550  uint256 public constant APR = 30 */\n      dup2\n      jump\n        /* \"FCC2.sol\":146:165  IERC20 public token */\n    tag_9:\n      sload(0x00)\n      tag_12\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"FCC2.sol\":199:232  uint256 public stakingPoolBalance */\n    tag_10:\n      tag_16\n      sload(0x01)\n      dup2\n      jump\n        /* \"FCC2.sol\":892:1831  function unstake() external {... */\n    tag_23:\n        /* \"FCC2.sol\":969:979  msg.sender */\n      caller\n        /* \"FCC2.sol\":931:951  uint256 stakedAmount */\n      0x00\n        /* \"FCC2.sol\":954:980  stakedBalances[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"FCC2.sol\":954:968  stakedBalances */\n      0x03\n        /* \"FCC2.sol\":954:980  stakedBalances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"FCC2.sol\":999:1015  stakedAmount > 0 */\n      dup1\n        /* \"FCC2.sol\":991:1036  require(stakedAmount > 0, \"No tokens staked\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1303:1305   */\n      0x20\n        /* \"FCC2.sol\":991:1036  require(stakedAmount > 0, \"No tokens staked\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1285:1306   */\n      mstore\n        /* \"#utility.yul\":1342:1344   */\n      0x10\n        /* \"#utility.yul\":1322:1340   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1315:1345   */\n      mstore\n      shl(0x82, 0x139bc81d1bdad95b9cc81cdd185ad959)\n        /* \"#utility.yul\":1361:1379   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1354:1400   */\n      mstore\n        /* \"#utility.yul\":1417:1435   */\n      0x64\n      add\n        /* \"FCC2.sol\":991:1036  require(stakedAmount > 0, \"No tokens staked\") */\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_43:\n        /* \"FCC2.sol\":1111:1121  msg.sender */\n      caller\n        /* \"FCC2.sol\":1049:1072  uint256 stakingDuration */\n      0x00\n        /* \"FCC2.sol\":1093:1122  stakingTimestamps[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"FCC2.sol\":1093:1110  stakingTimestamps */\n      0x04\n        /* \"FCC2.sol\":1093:1122  stakingTimestamps[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"FCC2.sol\":1075:1122  block.timestamp - stakingTimestamps[msg.sender] */\n      tag_46\n      swap1\n        /* \"FCC2.sol\":1075:1090  block.timestamp */\n      timestamp\n        /* \"FCC2.sol\":1075:1122  block.timestamp - stakingTimestamps[msg.sender] */\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"FCC2.sol\":1049:1122  uint256 stakingDuration = block.timestamp - stakingTimestamps[msg.sender] */\n      swap1\n      pop\n        /* \"FCC2.sol\":1133:1147  uint256 reward */\n      0x00\n        /* \"FCC2.sol\":1150:1197  calculateRewards(stakedAmount, stakingDuration) */\n      tag_48\n        /* \"FCC2.sol\":1167:1179  stakedAmount */\n      dup4\n        /* \"FCC2.sol\":1181:1196  stakingDuration */\n      dup4\n        /* \"FCC2.sol\":1150:1166  calculateRewards */\n      tag_49\n        /* \"FCC2.sol\":1150:1197  calculateRewards(stakedAmount, stakingDuration) */\n      jump\t// in\n    tag_48:\n        /* \"FCC2.sol\":1133:1197  uint256 reward = calculateRewards(stakedAmount, stakingDuration) */\n      swap1\n      pop\n        /* \"FCC2.sol\":1310:1316  reward */\n      dup1\n        /* \"FCC2.sol\":1288:1306  stakingPoolBalance */\n      sload(0x01)\n        /* \"FCC2.sol\":1288:1316  stakingPoolBalance >= reward */\n      lt\n      iszero\n        /* \"FCC2.sol\":1280:1354  require(stakingPoolBalance >= reward, \"Insufficient staking pool balance\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1913:1915   */\n      0x20\n        /* \"FCC2.sol\":1280:1354  require(stakingPoolBalance >= reward, \"Insufficient staking pool balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1895:1916   */\n      mstore\n        /* \"#utility.yul\":1952:1954   */\n      0x21\n        /* \"#utility.yul\":1932:1950   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1925:1955   */\n      mstore\n        /* \"#utility.yul\":1991:2025   */\n      0x496e73756666696369656e74207374616b696e6720706f6f6c2062616c616e63\n        /* \"#utility.yul\":1971:1989   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1964:2026   */\n      mstore\n      shl(0xf8, 0x65)\n        /* \"#utility.yul\":2042:2060   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2035:2066   */\n      mstore\n        /* \"#utility.yul\":2083:2102   */\n      0x84\n      add\n        /* \"FCC2.sol\":1280:1354  require(stakingPoolBalance >= reward, \"Insufficient staking pool balance\") */\n      tag_44\n        /* \"#utility.yul\":1711:2108   */\n      jump\n        /* \"FCC2.sol\":1280:1354  require(stakingPoolBalance >= reward, \"Insufficient staking pool balance\") */\n    tag_50:\n        /* \"FCC2.sol\":1429:1435  reward */\n      dup1\n        /* \"FCC2.sol\":1407:1425  stakingPoolBalance */\n      0x01\n      0x00\n        /* \"FCC2.sol\":1407:1435  stakingPoolBalance -= reward */\n      dup3\n      dup3\n      sload\n      tag_53\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_53:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"FCC2.sol\":1499:1509  msg.sender */\n      caller\n        /* \"FCC2.sol\":1513:1514  0 */\n      0x00\n        /* \"FCC2.sol\":1484:1510  stakedBalances[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"FCC2.sol\":1484:1498  stakedBalances */\n      0x03\n        /* \"FCC2.sol\":1484:1510  stakedBalances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"FCC2.sol\":1484:1514  stakedBalances[msg.sender] = 0 */\n      dup4\n      swap1\n      sstore\n        /* \"FCC2.sol\":1525:1542  stakingTimestamps */\n      0x04\n        /* \"FCC2.sol\":1525:1554  stakingTimestamps[msg.sender] */\n      swap2\n      dup3\n      swap1\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"FCC2.sol\":1525:1558  stakingTimestamps[msg.sender] = 0 */\n      dup4\n      swap1\n      sstore\n        /* \"FCC2.sol\":1645:1650  token */\n      swap2\n      sload\n        /* \"FCC2.sol\":1645:1685  token.transfer(msg.sender, stakedAmount) */\n      swap2\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":2287:2338   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":2354:2372   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2347:2381   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"FCC2.sol\":1645:1650  token */\n      and\n      swap1\n        /* \"FCC2.sol\":1645:1659  token.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2260:2278   */\n      0x44\n      add\n        /* \"FCC2.sol\":1645:1685  token.transfer(msg.sender, stakedAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      pop\n        /* \"FCC2.sol\":1696:1701  token */\n      sload(0x00)\n        /* \"FCC2.sol\":1711:1724  stakingWallet */\n      sload(0x02)\n        /* \"FCC2.sol\":1696:1733  token.transfer(stakingWallet, reward) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"FCC2.sol\":1711:1724  stakingWallet */\n      swap2\n      dup3\n      and\n        /* \"FCC2.sol\":1696:1733  token.transfer(stakingWallet, reward) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2287:2338   */\n      mstore\n        /* \"#utility.yul\":2354:2372   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2347:2381   */\n      dup5\n      swap1\n      mstore\n        /* \"FCC2.sol\":1696:1701  token */\n      swap2\n      and\n      swap1\n        /* \"FCC2.sol\":1696:1710  token.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2260:2278   */\n      0x44\n      add\n        /* \"FCC2.sol\":1696:1733  token.transfer(stakingWallet, reward) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_62\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_62:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_63:\n      pop\n        /* \"FCC2.sol\":1782:1823  Unstake(msg.sender, stakedAmount, reward) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2848:2873   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":2904:2906   */\n      0x20\n        /* \"#utility.yul\":2889:2907   */\n      dup2\n      add\n        /* \"#utility.yul\":2882:2916   */\n      dup4\n      swap1\n      mstore\n        /* \"FCC2.sol\":1790:1800  msg.sender */\n      caller\n      swap2\n        /* \"FCC2.sol\":1782:1823  Unstake(msg.sender, stakedAmount, reward) */\n      0xf960dbf9e5d0682f7a298ed974e33a28b4464914b7a2bfac12ae419a9afeb280\n      swap2\n        /* \"#utility.yul\":2821:2839   */\n      add\n        /* \"FCC2.sol\":1782:1823  Unstake(msg.sender, stakedAmount, reward) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"FCC2.sol\":920:1831  {... */\n      pop\n      pop\n      pop\n        /* \"FCC2.sol\":892:1831  function unstake() external {... */\n      jump\t// out\n        /* \"FCC2.sol\":2230:2761  function stake(uint256 amount) external {... */\n    tag_31:\n        /* \"FCC2.sol\":2298:2299  0 */\n      0x00\n        /* \"FCC2.sol\":2289:2295  amount */\n      dup2\n        /* \"FCC2.sol\":2289:2299  amount > 0 */\n      gt\n        /* \"FCC2.sol\":2281:2336  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3129:3131   */\n      0x20\n        /* \"FCC2.sol\":2281:2336  require(amount > 0, \"Amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3111:3132   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3148:3166   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3141:3171   */\n      mstore\n        /* \"#utility.yul\":3207:3241   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":3187:3205   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3180:3242   */\n      mstore\n        /* \"#utility.yul\":3259:3277   */\n      0x64\n      add\n        /* \"FCC2.sol\":2281:2336  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_44\n        /* \"#utility.yul\":2927:3283   */\n      jump\n        /* \"FCC2.sol\":2281:2336  require(amount > 0, \"Amount must be greater than zero\") */\n    tag_67:\n        /* \"FCC2.sol\":2393:2398  token */\n      sload(0x00)\n        /* \"FCC2.sol\":2393:2446  token.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"FCC2.sol\":2412:2422  msg.sender */\n      caller\n        /* \"FCC2.sol\":2393:2446  token.transferFrom(msg.sender, address(this), amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3490:3541   */\n      mstore\n        /* \"FCC2.sol\":2432:2436  this */\n      address\n        /* \"#utility.yul\":3557:3575   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3550:3610   */\n      mstore\n        /* \"#utility.yul\":3626:3644   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3619:3653   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"FCC2.sol\":2393:2398  token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"FCC2.sol\":2393:2411  token.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":3463:3481   */\n      0x64\n      add\n        /* \"FCC2.sol\":2393:2446  token.transferFrom(msg.sender, address(this), amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_73:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_74:\n      pop\n        /* \"FCC2.sol\":2523:2533  msg.sender */\n      caller\n        /* \"FCC2.sol\":2508:2534  stakedBalances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"FCC2.sol\":2508:2522  stakedBalances */\n      0x03\n        /* \"FCC2.sol\":2508:2534  stakedBalances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"FCC2.sol\":2508:2544  stakedBalances[msg.sender] += amount */\n      dup1\n      sload\n        /* \"FCC2.sol\":2538:2544  amount */\n      dup4\n      swap3\n        /* \"FCC2.sol\":2508:2534  stakedBalances[msg.sender] */\n      swap1\n        /* \"FCC2.sol\":2508:2544  stakedBalances[msg.sender] += amount */\n      tag_75\n      swap1\n        /* \"FCC2.sol\":2538:2544  amount */\n      dup5\n      swap1\n        /* \"FCC2.sol\":2508:2544  stakedBalances[msg.sender] += amount */\n      tag_76\n      jump\t// in\n    tag_75:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"FCC2.sol\":2573:2583  msg.sender */\n      caller\n        /* \"FCC2.sol\":2555:2584  stakingTimestamps[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"FCC2.sol\":2555:2572  stakingTimestamps */\n      0x04\n        /* \"FCC2.sol\":2555:2584  stakingTimestamps[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"FCC2.sol\":2587:2602  block.timestamp */\n      timestamp\n        /* \"FCC2.sol\":2555:2602  stakingTimestamps[msg.sender] = block.timestamp */\n      swap1\n      sstore\n        /* \"FCC2.sol\":2683:2710  calculateRewards(amount, 0) */\n      tag_77\n      swap1\n        /* \"FCC2.sol\":2700:2706  amount */\n      dup3\n      swap1\n        /* \"FCC2.sol\":2683:2699  calculateRewards */\n      tag_49\n        /* \"FCC2.sol\":2683:2710  calculateRewards(amount, 0) */\n      jump\t// in\n    tag_77:\n        /* \"FCC2.sol\":2661:2679  stakingPoolBalance */\n      0x01\n      0x00\n        /* \"FCC2.sol\":2661:2710  stakingPoolBalance += calculateRewards(amount, 0) */\n      dup3\n      dup3\n      sload\n      tag_78\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_78:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n        /* \"FCC2.sol\":2230:2761  function stake(uint256 amount) external {... */\n      jump\t// out\n        /* \"FCC2.sol\":1903:2155  function calculateRewards(uint256 stakedAmount, uint256 duration) internal pure returns (uint256) {... */\n    tag_49:\n        /* \"FCC2.sol\":1992:1999  uint256 */\n      0x00\n      dup1\n        /* \"FCC2.sol\":2058:2061  100 */\n      0x64\n        /* \"FCC2.sol\":2036:2054  stakedAmount * APR */\n      tag_80\n        /* \"FCC2.sol\":548:550  30 */\n      0x1e\n        /* \"FCC2.sol\":2036:2048  stakedAmount */\n      dup7\n        /* \"FCC2.sol\":2036:2054  stakedAmount * APR */\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"FCC2.sol\":2035:2061  (stakedAmount * APR) / 100 */\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"FCC2.sol\":2012:2061  uint256 yearlyReward = (stakedAmount * APR) / 100 */\n      swap1\n      pop\n        /* \"FCC2.sol\":2108:2116  365 days */\n      0x01e13380\n        /* \"FCC2.sol\":2080:2103  yearlyReward * duration */\n      tag_84\n        /* \"FCC2.sol\":2095:2103  duration */\n      dup5\n        /* \"FCC2.sol\":2012:2061  uint256 yearlyReward = (stakedAmount * APR) / 100 */\n      dup4\n        /* \"FCC2.sol\":2080:2103  yearlyReward * duration */\n      tag_81\n      jump\t// in\n    tag_84:\n        /* \"FCC2.sol\":2079:2117  (yearlyReward * duration) / (365 days) */\n      tag_85\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_85:\n        /* \"FCC2.sol\":2072:2117  return (yearlyReward * duration) / (365 days) */\n      swap2\n      pop\n      pop\n        /* \"FCC2.sol\":1903:2155  function calculateRewards(uint256 stakedAmount, uint256 duration) internal pure returns (uint256) {... */\n    tag_79:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":222:508   */\n    tag_18:\n        /* \"#utility.yul\":281:287   */\n      0x00\n        /* \"#utility.yul\":334:336   */\n      0x20\n        /* \"#utility.yul\":322:331   */\n      dup3\n        /* \"#utility.yul\":313:320   */\n      dup5\n        /* \"#utility.yul\":309:332   */\n      sub\n        /* \"#utility.yul\":305:337   */\n      slt\n        /* \"#utility.yul\":302:354   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":350:351   */\n      0x00\n        /* \"#utility.yul\":347:348   */\n      dup1\n        /* \"#utility.yul\":340:352   */\n      revert\n        /* \"#utility.yul\":302:354   */\n    tag_90:\n        /* \"#utility.yul\":376:399   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":428:459   */\n      dup2\n      and\n        /* \"#utility.yul\":418:460   */\n      dup2\n      eq\n        /* \"#utility.yul\":408:478   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":474:475   */\n      0x00\n        /* \"#utility.yul\":471:472   */\n      dup1\n        /* \"#utility.yul\":464:476   */\n      revert\n        /* \"#utility.yul\":408:478   */\n    tag_91:\n        /* \"#utility.yul\":497:502   */\n      swap4\n        /* \"#utility.yul\":222:508   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":695:875   */\n    tag_30:\n        /* \"#utility.yul\":754:760   */\n      0x00\n        /* \"#utility.yul\":807:809   */\n      0x20\n        /* \"#utility.yul\":795:804   */\n      dup3\n        /* \"#utility.yul\":786:793   */\n      dup5\n        /* \"#utility.yul\":782:805   */\n      sub\n        /* \"#utility.yul\":778:810   */\n      slt\n        /* \"#utility.yul\":775:827   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":820:821   */\n      dup1\n        /* \"#utility.yul\":813:825   */\n      revert\n        /* \"#utility.yul\":775:827   */\n    tag_94:\n      pop\n        /* \"#utility.yul\":846:869   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":695:875   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1446:1573   */\n    tag_86:\n        /* \"#utility.yul\":1507:1517   */\n      0x4e487b71\n        /* \"#utility.yul\":1502:1505   */\n      0xe0\n        /* \"#utility.yul\":1498:1518   */\n      shl\n        /* \"#utility.yul\":1495:1496   */\n      0x00\n        /* \"#utility.yul\":1488:1519   */\n      mstore\n        /* \"#utility.yul\":1538:1542   */\n      0x11\n        /* \"#utility.yul\":1535:1536   */\n      0x04\n        /* \"#utility.yul\":1528:1543   */\n      mstore\n        /* \"#utility.yul\":1562:1566   */\n      0x24\n        /* \"#utility.yul\":1559:1560   */\n      0x00\n        /* \"#utility.yul\":1552:1567   */\n      revert\n        /* \"#utility.yul\":1578:1706   */\n    tag_47:\n        /* \"#utility.yul\":1645:1654   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":1666:1677   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":1663:1700   */\n      iszero\n      tag_79\n      jumpi\n        /* \"#utility.yul\":1680:1698   */\n      tag_79\n      tag_86\n      jump\t// in\n        /* \"#utility.yul\":2392:2669   */\n    tag_59:\n        /* \"#utility.yul\":2459:2465   */\n      0x00\n        /* \"#utility.yul\":2512:2514   */\n      0x20\n        /* \"#utility.yul\":2500:2509   */\n      dup3\n        /* \"#utility.yul\":2491:2498   */\n      dup5\n        /* \"#utility.yul\":2487:2510   */\n      sub\n        /* \"#utility.yul\":2483:2515   */\n      slt\n        /* \"#utility.yul\":2480:2532   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":2528:2529   */\n      0x00\n        /* \"#utility.yul\":2525:2526   */\n      dup1\n        /* \"#utility.yul\":2518:2530   */\n      revert\n        /* \"#utility.yul\":2480:2532   */\n    tag_104:\n        /* \"#utility.yul\":2560:2569   */\n      dup2\n        /* \"#utility.yul\":2554:2570   */\n      mload\n        /* \"#utility.yul\":2613:2618   */\n      dup1\n        /* \"#utility.yul\":2606:2619   */\n      iszero\n        /* \"#utility.yul\":2599:2620   */\n      iszero\n        /* \"#utility.yul\":2592:2597   */\n      dup2\n        /* \"#utility.yul\":2589:2621   */\n      eq\n        /* \"#utility.yul\":2579:2639   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":2635:2636   */\n      0x00\n        /* \"#utility.yul\":2632:2633   */\n      dup1\n        /* \"#utility.yul\":2625:2637   */\n      revert\n        /* \"#utility.yul\":3664:3789   */\n    tag_76:\n        /* \"#utility.yul\":3729:3738   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3750:3760   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3747:3783   */\n      iszero\n      tag_79\n      jumpi\n        /* \"#utility.yul\":3763:3781   */\n      tag_79\n      tag_86\n      jump\t// in\n        /* \"#utility.yul\":3794:3962   */\n    tag_81:\n        /* \"#utility.yul\":3867:3876   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":3898:3907   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3915:3930   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3909:3931   */\n      dup5\n      eq\n        /* \"#utility.yul\":3895:3932   */\n      or\n        /* \"#utility.yul\":3885:3956   */\n      tag_79\n      jumpi\n        /* \"#utility.yul\":3936:3954   */\n      tag_79\n      tag_86\n      jump\t// in\n        /* \"#utility.yul\":3967:4184   */\n    tag_83:\n        /* \"#utility.yul\":4007:4008   */\n      0x00\n        /* \"#utility.yul\":4033:4034   */\n      dup3\n        /* \"#utility.yul\":4023:4155   */\n      tag_116\n      jumpi\n        /* \"#utility.yul\":4077:4087   */\n      0x4e487b71\n        /* \"#utility.yul\":4072:4075   */\n      0xe0\n        /* \"#utility.yul\":4068:4088   */\n      shl\n        /* \"#utility.yul\":4065:4066   */\n      0x00\n        /* \"#utility.yul\":4058:4089   */\n      mstore\n        /* \"#utility.yul\":4112:4116   */\n      0x12\n        /* \"#utility.yul\":4109:4110   */\n      0x04\n        /* \"#utility.yul\":4102:4117   */\n      mstore\n        /* \"#utility.yul\":4140:4144   */\n      0x24\n        /* \"#utility.yul\":4137:4138   */\n      0x00\n        /* \"#utility.yul\":4130:4145   */\n      revert\n        /* \"#utility.yul\":4023:4155   */\n    tag_116:\n      pop\n        /* \"#utility.yul\":4169:4178   */\n      div\n      swap1\n        /* \"#utility.yul\":3967:4184   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122079a5e564a06818d17e7884e104f5fd27e79389a9b34d6a2b317807829c1b2c4064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 90,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:491:2",
										"nodeType": "YulBlock",
										"src": "0:491:2",
										"statements": [
											{
												"nativeSrc": "6:3:2",
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:2",
													"nodeType": "YulBlock",
													"src": "74:117:2",
													"statements": [
														{
															"nativeSrc": "84:22:2",
															"nodeType": "YulAssignment",
															"src": "84:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:2"
																},
																"nativeSrc": "93:13:2",
																"nodeType": "YulFunctionCall",
																"src": "93:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:2",
																"nodeType": "YulBlock",
																"src": "169:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:2",
																					"nodeType": "YulLiteral",
																					"src": "178:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:2",
																					"nodeType": "YulLiteral",
																					"src": "181:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:2"
																			},
																			"nativeSrc": "171:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:2"
																		},
																		"nativeSrc": "171:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:2",
																										"nodeType": "YulLiteral",
																										"src": "154:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:2",
																										"nodeType": "YulLiteral",
																										"src": "159:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:2",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:2"
																								},
																								"nativeSrc": "150:11:2",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:2"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:2",
																								"nodeType": "YulLiteral",
																								"src": "163:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:2"
																						},
																						"nativeSrc": "146:19:2",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:2"
																				},
																				"nativeSrc": "135:31:2",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:2"
																		},
																		"nativeSrc": "125:42:2",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:2"
																},
																"nativeSrc": "118:50:2",
																"nodeType": "YulFunctionCall",
																"src": "118:50:2"
															},
															"nativeSrc": "115:70:2",
															"nodeType": "YulIf",
															"src": "115:70:2"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:2",
														"nodeType": "YulTypedName",
														"src": "53:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:2",
														"nodeType": "YulTypedName",
														"src": "64:5:2",
														"type": ""
													}
												],
												"src": "14:177:2"
											},
											{
												"body": {
													"nativeSrc": "294:195:2",
													"nodeType": "YulBlock",
													"src": "294:195:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "340:16:2",
																"nodeType": "YulBlock",
																"src": "340:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "349:1:2",
																					"nodeType": "YulLiteral",
																					"src": "349:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "352:1:2",
																					"nodeType": "YulLiteral",
																					"src": "352:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "342:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:2"
																			},
																			"nativeSrc": "342:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:2"
																		},
																		"nativeSrc": "342:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "315:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "311:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:2"
																		},
																		"nativeSrc": "311:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "336:2:2",
																		"nodeType": "YulLiteral",
																		"src": "336:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "307:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:2"
																},
																"nativeSrc": "307:32:2",
																"nodeType": "YulFunctionCall",
																"src": "307:32:2"
															},
															"nativeSrc": "304:52:2",
															"nodeType": "YulIf",
															"src": "304:52:2"
														},
														{
															"nativeSrc": "365:50:2",
															"nodeType": "YulAssignment",
															"src": "365:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "405:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "375:29:2",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:2"
																},
																"nativeSrc": "375:40:2",
																"nodeType": "YulFunctionCall",
																"src": "375:40:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "365:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:2"
																}
															]
														},
														{
															"nativeSrc": "424:59:2",
															"nodeType": "YulAssignment",
															"src": "424:59:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "468:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "479:2:2",
																				"nodeType": "YulLiteral",
																				"src": "479:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "464:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:2"
																		},
																		"nativeSrc": "464:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "434:29:2",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:2"
																},
																"nativeSrc": "434:49:2",
																"nodeType": "YulFunctionCall",
																"src": "434:49:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "424:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "196:293:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "252:9:2",
														"nodeType": "YulTypedName",
														"src": "252:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "263:7:2",
														"nodeType": "YulTypedName",
														"src": "263:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "275:6:2",
														"nodeType": "YulTypedName",
														"src": "275:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "283:6:2",
														"nodeType": "YulTypedName",
														"src": "283:6:2",
														"type": ""
													}
												],
												"src": "196:293:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5060405161068b38038061068b833981016040819052602b916074565b5f80546001600160a01b039384166001600160a01b0319918216179091556002805492909316911617905560a0565b80516001600160a01b0381168114606f575f80fd5b919050565b5f80604083850312156084575f80fd5b608b83605a565b9150609760208401605a565b90509250929050565b6105de806100ad5f395ff3fe608060405234801561000f575f80fd5b5060043610610085575f3560e01c8063a694fc3a11610058578063a694fc3a1461010f578063bd30558e14610122578063fc0c546a1461012a578063fc1c08501461013c575f80fd5b806306ee6ad8146100895780631460fa87146100b95780632def6620146100e6578063937b983b146100f0575b5f80fd5b60025461009c906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d86100c73660046104d5565b60036020525f908152604090205481565b6040519081526020016100b0565b6100ee610145565b005b6100d86100fe3660046104d5565b60046020525f908152604090205481565b6100ee61011d366004610502565b610379565b6100d8601e81565b5f5461009c906001600160a01b031681565b6100d860015481565b335f90815260036020526040902054806101995760405162461bcd60e51b815260206004820152601060248201526f139bc81d1bdad95b9cc81cdd185ad95960821b60448201526064015b60405180910390fd5b335f908152600460205260408120546101b2904261052d565b90505f6101bf8383610497565b905080600154101561021d5760405162461bcd60e51b815260206004820152602160248201527f496e73756666696369656e74207374616b696e6720706f6f6c2062616c616e636044820152606560f81b6064820152608401610190565b8060015f82825461022e919061052d565b9091555050335f8181526003602090815260408083208390556004918290528083208390559154915163a9059cbb60e01b815290810192909252602482018590526001600160a01b03169063a9059cbb906044016020604051808303815f875af115801561029e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102c29190610540565b505f5460025460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303815f875af1158015610314573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103389190610540565b50604080518481526020810183905233917ff960dbf9e5d0682f7a298ed974e33a28b4464914b7a2bfac12ae419a9afeb280910160405180910390a2505050565b5f81116103c85760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610190565b5f546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303815f875af115801561041b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061043f9190610540565b50335f908152600360205260408120805483929061045e90849061055f565b9091555050335f90815260046020526040812042905561047f908290610497565b60015f82825461048f919061055f565b909155505050565b5f8060646104a6601e86610572565b6104b09190610589565b90506301e133806104c18483610572565b6104cb9190610589565b9150505b92915050565b5f602082840312156104e5575f80fd5b81356001600160a01b03811681146104fb575f80fd5b9392505050565b5f60208284031215610512575f80fd5b5035919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156104cf576104cf610519565b5f60208284031215610550575f80fd5b815180151581146104fb575f80fd5b808201808211156104cf576104cf610519565b80820281158282048414176104cf576104cf610519565b5f826105a357634e487b7160e01b5f52601260045260245ffd5b50049056fea264697066735822122079a5e564a06818d17e7884e104f5fd27e79389a9b34d6a2b317807829c1b2c4064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x68B CODESIZE SUB DUP1 PUSH2 0x68B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x2B SWAP2 PUSH1 0x74 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0xA0 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0x6F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH1 0x84 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x8B DUP4 PUSH1 0x5A JUMP JUMPDEST SWAP2 POP PUSH1 0x97 PUSH1 0x20 DUP5 ADD PUSH1 0x5A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x5DE DUP1 PUSH2 0xAD PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA694FC3A GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xBD30558E EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xFC1C0850 EQ PUSH2 0x13C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6EE6AD8 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x1460FA87 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x937B983B EQ PUSH2 0xF0 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x9C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH2 0xEE PUSH2 0x145 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD8 PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xEE PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0x502 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH2 0xD8 PUSH1 0x1E DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x9C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xD8 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x199 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BC81D1BDAD95B9CC81CDD185AD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1B2 SWAP1 TIMESTAMP PUSH2 0x52D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1BF DUP4 DUP4 PUSH2 0x497 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD LT ISZERO PUSH2 0x21D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207374616B696E6720706F6F6C2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x190 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x52D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x4 SWAP2 DUP3 SWAP1 MSTORE DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE SWAP2 SLOAD SWAP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x29E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x540 JUMP JUMPDEST POP PUSH0 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x314 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x540 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xF960DBF9E5D0682F7A298ED974E33A28B4464914B7A2BFAC12AE419A9AFEB280 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x3C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x540 JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x45E SWAP1 DUP5 SWAP1 PUSH2 0x55F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH2 0x47F SWAP1 DUP3 SWAP1 PUSH2 0x497 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x48F SWAP2 SWAP1 PUSH2 0x55F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x64 PUSH2 0x4A6 PUSH1 0x1E DUP7 PUSH2 0x572 JUMP JUMPDEST PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0x589 JUMP JUMPDEST SWAP1 POP PUSH4 0x1E13380 PUSH2 0x4C1 DUP5 DUP4 PUSH2 0x572 JUMP JUMPDEST PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0x589 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4FB JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x512 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4CF JUMPI PUSH2 0x4CF PUSH2 0x519 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x550 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x4FB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4CF JUMPI PUSH2 0x4CF PUSH2 0x519 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4CF JUMPI PUSH2 0x4CF PUSH2 0x519 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x5A3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xA5E564A06818D17E7884E104F5FD27E79389A9B34D6A2B317807 DUP3 SWAP13 SHL 0x2C BLOCKHASH PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "120:2644:1:-:0;;;686:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;749:5;:22;;-1:-1:-1;;;;;749:22:1;;;-1:-1:-1;;;;;;749:22:1;;;;;;;782:13;:30;;;;;;;;;;;120:2644;;14:177:2;93:13;;-1:-1:-1;;;;;135:31:2;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;120:2644:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@APR_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculateRewards_233": {
									"entryPoint": 1175,
									"id": 233,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@stake_280": {
									"entryPoint": 889,
									"id": 280,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakedBalances_91": {
									"entryPoint": null,
									"id": 91,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingPoolBalance_85": {
									"entryPoint": null,
									"id": 85,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingTimestamps_95": {
									"entryPoint": null,
									"id": 95,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingWallet_87": {
									"entryPoint": null,
									"id": 87,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_83": {
									"entryPoint": null,
									"id": 83,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unstake_206": {
									"entryPoint": 325,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_836a526636a94307c454f30ea2efbafe870ad2c9a7e4e57da3254500dad4834c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1305,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4186:2",
										"nodeType": "YulBlock",
										"src": "0:4186:2",
										"statements": [
											{
												"nativeSrc": "6:3:2",
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:2",
													"nodeType": "YulBlock",
													"src": "115:102:2",
													"statements": [
														{
															"nativeSrc": "125:26:2",
															"nodeType": "YulAssignment",
															"src": "125:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:2",
																		"nodeType": "YulLiteral",
																		"src": "148:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:2"
																},
																"nativeSrc": "133:18:2",
																"nodeType": "YulFunctionCall",
																"src": "133:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:2",
																								"nodeType": "YulLiteral",
																								"src": "198:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:2",
																								"nodeType": "YulLiteral",
																								"src": "203:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:2"
																						},
																						"nativeSrc": "194:11:2",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:2",
																						"nodeType": "YulLiteral",
																						"src": "207:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:2"
																				},
																				"nativeSrc": "190:19:2",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:2"
																		},
																		"nativeSrc": "178:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:2"
																},
																"nativeSrc": "160:51:2",
																"nodeType": "YulFunctionCall",
																"src": "160:51:2"
															},
															"nativeSrc": "160:51:2",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:2",
														"nodeType": "YulTypedName",
														"src": "84:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:2",
														"nodeType": "YulTypedName",
														"src": "95:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:2",
														"nodeType": "YulTypedName",
														"src": "106:4:2",
														"type": ""
													}
												],
												"src": "14:203:2"
											},
											{
												"body": {
													"nativeSrc": "292:216:2",
													"nodeType": "YulBlock",
													"src": "292:216:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "338:16:2",
																"nodeType": "YulBlock",
																"src": "338:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "347:1:2",
																					"nodeType": "YulLiteral",
																					"src": "347:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "350:1:2",
																					"nodeType": "YulLiteral",
																					"src": "350:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "340:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "340:6:2"
																			},
																			"nativeSrc": "340:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "340:12:2"
																		},
																		"nativeSrc": "340:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "340:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "313:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "313:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "322:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "322:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "309:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "309:3:2"
																		},
																		"nativeSrc": "309:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "309:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "334:2:2",
																		"nodeType": "YulLiteral",
																		"src": "334:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "305:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "305:3:2"
																},
																"nativeSrc": "305:32:2",
																"nodeType": "YulFunctionCall",
																"src": "305:32:2"
															},
															"nativeSrc": "302:52:2",
															"nodeType": "YulIf",
															"src": "302:52:2"
														},
														{
															"nativeSrc": "363:36:2",
															"nodeType": "YulVariableDeclaration",
															"src": "363:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "389:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "389:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "376:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "376:12:2"
																},
																"nativeSrc": "376:23:2",
																"nodeType": "YulFunctionCall",
																"src": "376:23:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "367:5:2",
																	"nodeType": "YulTypedName",
																	"src": "367:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "462:16:2",
																"nodeType": "YulBlock",
																"src": "462:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "471:1:2",
																					"nodeType": "YulLiteral",
																					"src": "471:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:2",
																					"nodeType": "YulLiteral",
																					"src": "474:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "464:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "464:6:2"
																			},
																			"nativeSrc": "464:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "464:12:2"
																		},
																		"nativeSrc": "464:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "464:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "421:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "421:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "432:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "432:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "447:3:2",
																										"nodeType": "YulLiteral",
																										"src": "447:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "452:1:2",
																										"nodeType": "YulLiteral",
																										"src": "452:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "443:3:2",
																									"nodeType": "YulIdentifier",
																									"src": "443:3:2"
																								},
																								"nativeSrc": "443:11:2",
																								"nodeType": "YulFunctionCall",
																								"src": "443:11:2"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "456:1:2",
																								"nodeType": "YulLiteral",
																								"src": "456:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "439:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "439:3:2"
																						},
																						"nativeSrc": "439:19:2",
																						"nodeType": "YulFunctionCall",
																						"src": "439:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "428:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "428:3:2"
																				},
																				"nativeSrc": "428:31:2",
																				"nodeType": "YulFunctionCall",
																				"src": "428:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "418:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "418:2:2"
																		},
																		"nativeSrc": "418:42:2",
																		"nodeType": "YulFunctionCall",
																		"src": "418:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "411:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "411:6:2"
																},
																"nativeSrc": "411:50:2",
																"nodeType": "YulFunctionCall",
																"src": "411:50:2"
															},
															"nativeSrc": "408:70:2",
															"nodeType": "YulIf",
															"src": "408:70:2"
														},
														{
															"nativeSrc": "487:15:2",
															"nodeType": "YulAssignment",
															"src": "487:15:2",
															"value": {
																"name": "value",
																"nativeSrc": "497:5:2",
																"nodeType": "YulIdentifier",
																"src": "497:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "487:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "487:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "222:286:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "258:9:2",
														"nodeType": "YulTypedName",
														"src": "258:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "269:7:2",
														"nodeType": "YulTypedName",
														"src": "269:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "281:6:2",
														"nodeType": "YulTypedName",
														"src": "281:6:2",
														"type": ""
													}
												],
												"src": "222:286:2"
											},
											{
												"body": {
													"nativeSrc": "614:76:2",
													"nodeType": "YulBlock",
													"src": "614:76:2",
													"statements": [
														{
															"nativeSrc": "624:26:2",
															"nodeType": "YulAssignment",
															"src": "624:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "636:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "636:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "647:2:2",
																		"nodeType": "YulLiteral",
																		"src": "647:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "632:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "632:3:2"
																},
																"nativeSrc": "632:18:2",
																"nodeType": "YulFunctionCall",
																"src": "632:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "624:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "624:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "666:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "666:9:2"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "677:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "677:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "659:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "659:6:2"
																},
																"nativeSrc": "659:25:2",
																"nodeType": "YulFunctionCall",
																"src": "659:25:2"
															},
															"nativeSrc": "659:25:2",
															"nodeType": "YulExpressionStatement",
															"src": "659:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "513:177:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "583:9:2",
														"nodeType": "YulTypedName",
														"src": "583:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "594:6:2",
														"nodeType": "YulTypedName",
														"src": "594:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "605:4:2",
														"nodeType": "YulTypedName",
														"src": "605:4:2",
														"type": ""
													}
												],
												"src": "513:177:2"
											},
											{
												"body": {
													"nativeSrc": "765:110:2",
													"nodeType": "YulBlock",
													"src": "765:110:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "811:16:2",
																"nodeType": "YulBlock",
																"src": "811:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "820:1:2",
																					"nodeType": "YulLiteral",
																					"src": "820:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "823:1:2",
																					"nodeType": "YulLiteral",
																					"src": "823:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "813:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "813:6:2"
																			},
																			"nativeSrc": "813:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "813:12:2"
																		},
																		"nativeSrc": "813:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "813:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "786:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "786:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "795:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "795:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "782:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "782:3:2"
																		},
																		"nativeSrc": "782:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "782:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "807:2:2",
																		"nodeType": "YulLiteral",
																		"src": "807:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "778:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "778:3:2"
																},
																"nativeSrc": "778:32:2",
																"nodeType": "YulFunctionCall",
																"src": "778:32:2"
															},
															"nativeSrc": "775:52:2",
															"nodeType": "YulIf",
															"src": "775:52:2"
														},
														{
															"nativeSrc": "836:33:2",
															"nodeType": "YulAssignment",
															"src": "836:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "859:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "859:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "846:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "846:12:2"
																},
																"nativeSrc": "846:23:2",
																"nodeType": "YulFunctionCall",
																"src": "846:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "836:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "836:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "695:180:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "731:9:2",
														"nodeType": "YulTypedName",
														"src": "731:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "742:7:2",
														"nodeType": "YulTypedName",
														"src": "742:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "754:6:2",
														"nodeType": "YulTypedName",
														"src": "754:6:2",
														"type": ""
													}
												],
												"src": "695:180:2"
											},
											{
												"body": {
													"nativeSrc": "994:102:2",
													"nodeType": "YulBlock",
													"src": "994:102:2",
													"statements": [
														{
															"nativeSrc": "1004:26:2",
															"nodeType": "YulAssignment",
															"src": "1004:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1016:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1016:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1027:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1027:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1012:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1012:3:2"
																},
																"nativeSrc": "1012:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1012:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1004:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1004:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1046:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1046:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1061:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1061:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1077:3:2",
																								"nodeType": "YulLiteral",
																								"src": "1077:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1082:1:2",
																								"nodeType": "YulLiteral",
																								"src": "1082:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1073:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "1073:3:2"
																						},
																						"nativeSrc": "1073:11:2",
																						"nodeType": "YulFunctionCall",
																						"src": "1073:11:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1086:1:2",
																						"nodeType": "YulLiteral",
																						"src": "1086:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1069:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1069:3:2"
																				},
																				"nativeSrc": "1069:19:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1069:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1057:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1057:3:2"
																		},
																		"nativeSrc": "1057:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1057:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1039:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1039:6:2"
																},
																"nativeSrc": "1039:51:2",
																"nodeType": "YulFunctionCall",
																"src": "1039:51:2"
															},
															"nativeSrc": "1039:51:2",
															"nodeType": "YulExpressionStatement",
															"src": "1039:51:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nativeSrc": "880:216:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "963:9:2",
														"nodeType": "YulTypedName",
														"src": "963:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "974:6:2",
														"nodeType": "YulTypedName",
														"src": "974:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "985:4:2",
														"nodeType": "YulTypedName",
														"src": "985:4:2",
														"type": ""
													}
												],
												"src": "880:216:2"
											},
											{
												"body": {
													"nativeSrc": "1275:166:2",
													"nodeType": "YulBlock",
													"src": "1275:166:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1292:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1292:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1303:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1303:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1285:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1285:6:2"
																},
																"nativeSrc": "1285:21:2",
																"nodeType": "YulFunctionCall",
																"src": "1285:21:2"
															},
															"nativeSrc": "1285:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "1285:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1326:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1326:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1337:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1337:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1322:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1322:3:2"
																		},
																		"nativeSrc": "1322:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1322:18:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1342:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1342:2:2",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1315:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:2"
																},
																"nativeSrc": "1315:30:2",
																"nodeType": "YulFunctionCall",
																"src": "1315:30:2"
															},
															"nativeSrc": "1315:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "1315:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1365:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1365:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1376:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1376:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1361:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1361:3:2"
																		},
																		"nativeSrc": "1361:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1361:18:2"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e73207374616b6564",
																		"kind": "string",
																		"nativeSrc": "1381:18:2",
																		"nodeType": "YulLiteral",
																		"src": "1381:18:2",
																		"type": "",
																		"value": "No tokens staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1354:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1354:6:2"
																},
																"nativeSrc": "1354:46:2",
																"nodeType": "YulFunctionCall",
																"src": "1354:46:2"
															},
															"nativeSrc": "1354:46:2",
															"nodeType": "YulExpressionStatement",
															"src": "1354:46:2"
														},
														{
															"nativeSrc": "1409:26:2",
															"nodeType": "YulAssignment",
															"src": "1409:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1421:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1421:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1432:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1417:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1417:3:2"
																},
																"nativeSrc": "1417:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1417:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1409:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1409:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1101:340:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1252:9:2",
														"nodeType": "YulTypedName",
														"src": "1252:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1266:4:2",
														"nodeType": "YulTypedName",
														"src": "1266:4:2",
														"type": ""
													}
												],
												"src": "1101:340:2"
											},
											{
												"body": {
													"nativeSrc": "1478:95:2",
													"nodeType": "YulBlock",
													"src": "1478:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1495:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1495:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1502:3:2",
																				"nodeType": "YulLiteral",
																				"src": "1502:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1507:10:2",
																				"nodeType": "YulLiteral",
																				"src": "1507:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1498:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1498:3:2"
																		},
																		"nativeSrc": "1498:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1498:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1488:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1488:6:2"
																},
																"nativeSrc": "1488:31:2",
																"nodeType": "YulFunctionCall",
																"src": "1488:31:2"
															},
															"nativeSrc": "1488:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "1488:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1535:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1535:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1538:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1538:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1528:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1528:6:2"
																},
																"nativeSrc": "1528:15:2",
																"nodeType": "YulFunctionCall",
																"src": "1528:15:2"
															},
															"nativeSrc": "1528:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "1528:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1559:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1559:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1562:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1562:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1552:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1552:6:2"
																},
																"nativeSrc": "1552:15:2",
																"nodeType": "YulFunctionCall",
																"src": "1552:15:2"
															},
															"nativeSrc": "1552:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "1552:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1446:127:2",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:127:2"
											},
											{
												"body": {
													"nativeSrc": "1627:79:2",
													"nodeType": "YulBlock",
													"src": "1627:79:2",
													"statements": [
														{
															"nativeSrc": "1637:17:2",
															"nodeType": "YulAssignment",
															"src": "1637:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1649:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1649:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1652:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1652:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1645:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1645:3:2"
																},
																"nativeSrc": "1645:9:2",
																"nodeType": "YulFunctionCall",
																"src": "1645:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "1637:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1637:4:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1678:22:2",
																"nodeType": "YulBlock",
																"src": "1678:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1680:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "1680:16:2"
																			},
																			"nativeSrc": "1680:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1680:18:2"
																		},
																		"nativeSrc": "1680:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1680:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "1669:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "1669:4:2"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "1675:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1675:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1666:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "1666:2:2"
																},
																"nativeSrc": "1666:11:2",
																"nodeType": "YulFunctionCall",
																"src": "1666:11:2"
															},
															"nativeSrc": "1663:37:2",
															"nodeType": "YulIf",
															"src": "1663:37:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "1578:128:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1609:1:2",
														"nodeType": "YulTypedName",
														"src": "1609:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1612:1:2",
														"nodeType": "YulTypedName",
														"src": "1612:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "1618:4:2",
														"nodeType": "YulTypedName",
														"src": "1618:4:2",
														"type": ""
													}
												],
												"src": "1578:128:2"
											},
											{
												"body": {
													"nativeSrc": "1885:223:2",
													"nodeType": "YulBlock",
													"src": "1885:223:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1902:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1902:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1913:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1913:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1895:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1895:6:2"
																},
																"nativeSrc": "1895:21:2",
																"nodeType": "YulFunctionCall",
																"src": "1895:21:2"
															},
															"nativeSrc": "1895:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "1895:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1936:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1947:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1947:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1932:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:2"
																		},
																		"nativeSrc": "1932:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1932:18:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1952:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1952:2:2",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1925:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1925:6:2"
																},
																"nativeSrc": "1925:30:2",
																"nodeType": "YulFunctionCall",
																"src": "1925:30:2"
															},
															"nativeSrc": "1925:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "1925:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1975:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1975:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1986:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1986:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1971:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1971:3:2"
																		},
																		"nativeSrc": "1971:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1971:18:2"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207374616b696e6720706f6f6c2062616c616e63",
																		"kind": "string",
																		"nativeSrc": "1991:34:2",
																		"nodeType": "YulLiteral",
																		"src": "1991:34:2",
																		"type": "",
																		"value": "Insufficient staking pool balanc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1964:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1964:6:2"
																},
																"nativeSrc": "1964:62:2",
																"nodeType": "YulFunctionCall",
																"src": "1964:62:2"
															},
															"nativeSrc": "1964:62:2",
															"nodeType": "YulExpressionStatement",
															"src": "1964:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2046:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2046:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2057:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2057:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2042:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2042:3:2"
																		},
																		"nativeSrc": "2042:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2042:18:2"
																	},
																	{
																		"hexValue": "65",
																		"kind": "string",
																		"nativeSrc": "2062:3:2",
																		"nodeType": "YulLiteral",
																		"src": "2062:3:2",
																		"type": "",
																		"value": "e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2035:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2035:6:2"
																},
																"nativeSrc": "2035:31:2",
																"nodeType": "YulFunctionCall",
																"src": "2035:31:2"
															},
															"nativeSrc": "2035:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "2035:31:2"
														},
														{
															"nativeSrc": "2075:27:2",
															"nodeType": "YulAssignment",
															"src": "2075:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2087:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2087:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2098:3:2",
																		"nodeType": "YulLiteral",
																		"src": "2098:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2083:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2083:3:2"
																},
																"nativeSrc": "2083:19:2",
																"nodeType": "YulFunctionCall",
																"src": "2083:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2075:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2075:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_836a526636a94307c454f30ea2efbafe870ad2c9a7e4e57da3254500dad4834c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1711:397:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1862:9:2",
														"nodeType": "YulTypedName",
														"src": "1862:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1876:4:2",
														"nodeType": "YulTypedName",
														"src": "1876:4:2",
														"type": ""
													}
												],
												"src": "1711:397:2"
											},
											{
												"body": {
													"nativeSrc": "2242:145:2",
													"nodeType": "YulBlock",
													"src": "2242:145:2",
													"statements": [
														{
															"nativeSrc": "2252:26:2",
															"nodeType": "YulAssignment",
															"src": "2252:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2264:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2264:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2275:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2275:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2260:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2260:3:2"
																},
																"nativeSrc": "2260:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2260:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2252:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2252:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2294:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2294:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2309:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2309:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2325:3:2",
																								"nodeType": "YulLiteral",
																								"src": "2325:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2330:1:2",
																								"nodeType": "YulLiteral",
																								"src": "2330:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2321:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "2321:3:2"
																						},
																						"nativeSrc": "2321:11:2",
																						"nodeType": "YulFunctionCall",
																						"src": "2321:11:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2334:1:2",
																						"nodeType": "YulLiteral",
																						"src": "2334:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2317:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2317:3:2"
																				},
																				"nativeSrc": "2317:19:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2317:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2305:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2305:3:2"
																		},
																		"nativeSrc": "2305:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2305:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2287:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2287:6:2"
																},
																"nativeSrc": "2287:51:2",
																"nodeType": "YulFunctionCall",
																"src": "2287:51:2"
															},
															"nativeSrc": "2287:51:2",
															"nodeType": "YulExpressionStatement",
															"src": "2287:51:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2358:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2358:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2369:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2369:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2354:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2354:3:2"
																		},
																		"nativeSrc": "2354:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2354:18:2"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2374:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2374:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2347:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2347:6:2"
																},
																"nativeSrc": "2347:34:2",
																"nodeType": "YulFunctionCall",
																"src": "2347:34:2"
															},
															"nativeSrc": "2347:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "2347:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2113:274:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2203:9:2",
														"nodeType": "YulTypedName",
														"src": "2203:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2214:6:2",
														"nodeType": "YulTypedName",
														"src": "2214:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2222:6:2",
														"nodeType": "YulTypedName",
														"src": "2222:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2233:4:2",
														"nodeType": "YulTypedName",
														"src": "2233:4:2",
														"type": ""
													}
												],
												"src": "2113:274:2"
											},
											{
												"body": {
													"nativeSrc": "2470:199:2",
													"nodeType": "YulBlock",
													"src": "2470:199:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2516:16:2",
																"nodeType": "YulBlock",
																"src": "2516:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2525:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2525:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2528:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2528:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2518:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2518:6:2"
																			},
																			"nativeSrc": "2518:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2518:12:2"
																		},
																		"nativeSrc": "2518:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2518:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2491:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2491:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2500:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2500:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2487:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2487:3:2"
																		},
																		"nativeSrc": "2487:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2487:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2512:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2512:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2483:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:2"
																},
																"nativeSrc": "2483:32:2",
																"nodeType": "YulFunctionCall",
																"src": "2483:32:2"
															},
															"nativeSrc": "2480:52:2",
															"nodeType": "YulIf",
															"src": "2480:52:2"
														},
														{
															"nativeSrc": "2541:29:2",
															"nodeType": "YulVariableDeclaration",
															"src": "2541:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2560:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2560:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2554:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "2554:5:2"
																},
																"nativeSrc": "2554:16:2",
																"nodeType": "YulFunctionCall",
																"src": "2554:16:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2545:5:2",
																	"nodeType": "YulTypedName",
																	"src": "2545:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2623:16:2",
																"nodeType": "YulBlock",
																"src": "2623:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2632:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2632:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2635:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2635:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2625:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2625:6:2"
																			},
																			"nativeSrc": "2625:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2625:12:2"
																		},
																		"nativeSrc": "2625:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2625:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2592:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2592:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2613:5:2",
																								"nodeType": "YulIdentifier",
																								"src": "2613:5:2"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2606:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "2606:6:2"
																						},
																						"nativeSrc": "2606:13:2",
																						"nodeType": "YulFunctionCall",
																						"src": "2606:13:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2599:6:2",
																					"nodeType": "YulIdentifier",
																					"src": "2599:6:2"
																				},
																				"nativeSrc": "2599:21:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2599:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2589:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "2589:2:2"
																		},
																		"nativeSrc": "2589:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2589:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2582:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2582:6:2"
																},
																"nativeSrc": "2582:40:2",
																"nodeType": "YulFunctionCall",
																"src": "2582:40:2"
															},
															"nativeSrc": "2579:60:2",
															"nodeType": "YulIf",
															"src": "2579:60:2"
														},
														{
															"nativeSrc": "2648:15:2",
															"nodeType": "YulAssignment",
															"src": "2648:15:2",
															"value": {
																"name": "value",
																"nativeSrc": "2658:5:2",
																"nodeType": "YulIdentifier",
																"src": "2658:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2648:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2648:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "2392:277:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2436:9:2",
														"nodeType": "YulTypedName",
														"src": "2436:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2447:7:2",
														"nodeType": "YulTypedName",
														"src": "2447:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2459:6:2",
														"nodeType": "YulTypedName",
														"src": "2459:6:2",
														"type": ""
													}
												],
												"src": "2392:277:2"
											},
											{
												"body": {
													"nativeSrc": "2803:119:2",
													"nodeType": "YulBlock",
													"src": "2803:119:2",
													"statements": [
														{
															"nativeSrc": "2813:26:2",
															"nodeType": "YulAssignment",
															"src": "2813:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2825:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2825:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2836:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2836:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2821:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2821:3:2"
																},
																"nativeSrc": "2821:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2821:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2813:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2813:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2855:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2855:9:2"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2866:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2866:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2848:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2848:6:2"
																},
																"nativeSrc": "2848:25:2",
																"nodeType": "YulFunctionCall",
																"src": "2848:25:2"
															},
															"nativeSrc": "2848:25:2",
															"nodeType": "YulExpressionStatement",
															"src": "2848:25:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2893:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2893:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2904:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2904:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2889:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2889:3:2"
																		},
																		"nativeSrc": "2889:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2889:18:2"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2909:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2909:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2882:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2882:6:2"
																},
																"nativeSrc": "2882:34:2",
																"nodeType": "YulFunctionCall",
																"src": "2882:34:2"
															},
															"nativeSrc": "2882:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "2882:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2674:248:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2764:9:2",
														"nodeType": "YulTypedName",
														"src": "2764:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2775:6:2",
														"nodeType": "YulTypedName",
														"src": "2775:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2783:6:2",
														"nodeType": "YulTypedName",
														"src": "2783:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2794:4:2",
														"nodeType": "YulTypedName",
														"src": "2794:4:2",
														"type": ""
													}
												],
												"src": "2674:248:2"
											},
											{
												"body": {
													"nativeSrc": "3101:182:2",
													"nodeType": "YulBlock",
													"src": "3101:182:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3118:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3118:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3129:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3129:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3111:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3111:6:2"
																},
																"nativeSrc": "3111:21:2",
																"nodeType": "YulFunctionCall",
																"src": "3111:21:2"
															},
															"nativeSrc": "3111:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "3111:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3152:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3152:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3163:2:2",
																				"nodeType": "YulLiteral",
																				"src": "3163:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3148:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3148:3:2"
																		},
																		"nativeSrc": "3148:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3148:18:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3168:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3168:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3141:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3141:6:2"
																},
																"nativeSrc": "3141:30:2",
																"nodeType": "YulFunctionCall",
																"src": "3141:30:2"
															},
															"nativeSrc": "3141:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "3141:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3191:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3191:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3202:2:2",
																				"nodeType": "YulLiteral",
																				"src": "3202:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3187:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3187:3:2"
																		},
																		"nativeSrc": "3187:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3187:18:2"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "3207:34:2",
																		"nodeType": "YulLiteral",
																		"src": "3207:34:2",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3180:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3180:6:2"
																},
																"nativeSrc": "3180:62:2",
																"nodeType": "YulFunctionCall",
																"src": "3180:62:2"
															},
															"nativeSrc": "3180:62:2",
															"nodeType": "YulExpressionStatement",
															"src": "3180:62:2"
														},
														{
															"nativeSrc": "3251:26:2",
															"nodeType": "YulAssignment",
															"src": "3251:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3263:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3263:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3274:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3274:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3259:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3259:3:2"
																},
																"nativeSrc": "3259:18:2",
																"nodeType": "YulFunctionCall",
																"src": "3259:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3251:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3251:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2927:356:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3078:9:2",
														"nodeType": "YulTypedName",
														"src": "3078:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3092:4:2",
														"nodeType": "YulTypedName",
														"src": "3092:4:2",
														"type": ""
													}
												],
												"src": "2927:356:2"
											},
											{
												"body": {
													"nativeSrc": "3445:214:2",
													"nodeType": "YulBlock",
													"src": "3445:214:2",
													"statements": [
														{
															"nativeSrc": "3455:26:2",
															"nodeType": "YulAssignment",
															"src": "3455:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3467:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3467:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3478:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3478:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3463:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3463:3:2"
																},
																"nativeSrc": "3463:18:2",
																"nodeType": "YulFunctionCall",
																"src": "3463:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3455:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3455:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3497:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3497:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3512:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "3512:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3528:3:2",
																								"nodeType": "YulLiteral",
																								"src": "3528:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3533:1:2",
																								"nodeType": "YulLiteral",
																								"src": "3533:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3524:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "3524:3:2"
																						},
																						"nativeSrc": "3524:11:2",
																						"nodeType": "YulFunctionCall",
																						"src": "3524:11:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3537:1:2",
																						"nodeType": "YulLiteral",
																						"src": "3537:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3520:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "3520:3:2"
																				},
																				"nativeSrc": "3520:19:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3520:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3508:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3508:3:2"
																		},
																		"nativeSrc": "3508:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3508:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3490:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3490:6:2"
																},
																"nativeSrc": "3490:51:2",
																"nodeType": "YulFunctionCall",
																"src": "3490:51:2"
															},
															"nativeSrc": "3490:51:2",
															"nodeType": "YulExpressionStatement",
															"src": "3490:51:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3561:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3561:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3572:2:2",
																				"nodeType": "YulLiteral",
																				"src": "3572:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3557:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:2"
																		},
																		"nativeSrc": "3557:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "3581:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "3581:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3597:3:2",
																								"nodeType": "YulLiteral",
																								"src": "3597:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3602:1:2",
																								"nodeType": "YulLiteral",
																								"src": "3602:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3593:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "3593:3:2"
																						},
																						"nativeSrc": "3593:11:2",
																						"nodeType": "YulFunctionCall",
																						"src": "3593:11:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3606:1:2",
																						"nodeType": "YulLiteral",
																						"src": "3606:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3589:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "3589:3:2"
																				},
																				"nativeSrc": "3589:19:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3589:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3577:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3577:3:2"
																		},
																		"nativeSrc": "3577:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3577:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3550:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3550:6:2"
																},
																"nativeSrc": "3550:60:2",
																"nodeType": "YulFunctionCall",
																"src": "3550:60:2"
															},
															"nativeSrc": "3550:60:2",
															"nodeType": "YulExpressionStatement",
															"src": "3550:60:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3630:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3630:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3641:2:2",
																				"nodeType": "YulLiteral",
																				"src": "3641:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3626:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3626:3:2"
																		},
																		"nativeSrc": "3626:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3626:18:2"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3646:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3646:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3619:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3619:6:2"
																},
																"nativeSrc": "3619:34:2",
																"nodeType": "YulFunctionCall",
																"src": "3619:34:2"
															},
															"nativeSrc": "3619:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "3619:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3288:371:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3398:9:2",
														"nodeType": "YulTypedName",
														"src": "3398:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3409:6:2",
														"nodeType": "YulTypedName",
														"src": "3409:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3417:6:2",
														"nodeType": "YulTypedName",
														"src": "3417:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3425:6:2",
														"nodeType": "YulTypedName",
														"src": "3425:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3436:4:2",
														"nodeType": "YulTypedName",
														"src": "3436:4:2",
														"type": ""
													}
												],
												"src": "3288:371:2"
											},
											{
												"body": {
													"nativeSrc": "3712:77:2",
													"nodeType": "YulBlock",
													"src": "3712:77:2",
													"statements": [
														{
															"nativeSrc": "3722:16:2",
															"nodeType": "YulAssignment",
															"src": "3722:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3733:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3733:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3736:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3736:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3729:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3729:3:2"
																},
																"nativeSrc": "3729:9:2",
																"nodeType": "YulFunctionCall",
																"src": "3729:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3722:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3722:3:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3761:22:2",
																"nodeType": "YulBlock",
																"src": "3761:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3763:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "3763:16:2"
																			},
																			"nativeSrc": "3763:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3763:18:2"
																		},
																		"nativeSrc": "3763:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3763:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3753:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3753:1:2"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3756:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3756:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3750:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "3750:2:2"
																},
																"nativeSrc": "3750:10:2",
																"nodeType": "YulFunctionCall",
																"src": "3750:10:2"
															},
															"nativeSrc": "3747:36:2",
															"nodeType": "YulIf",
															"src": "3747:36:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3664:125:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3695:1:2",
														"nodeType": "YulTypedName",
														"src": "3695:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3698:1:2",
														"nodeType": "YulTypedName",
														"src": "3698:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3704:3:2",
														"nodeType": "YulTypedName",
														"src": "3704:3:2",
														"type": ""
													}
												],
												"src": "3664:125:2"
											},
											{
												"body": {
													"nativeSrc": "3846:116:2",
													"nodeType": "YulBlock",
													"src": "3846:116:2",
													"statements": [
														{
															"nativeSrc": "3856:20:2",
															"nodeType": "YulAssignment",
															"src": "3856:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3871:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3871:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3874:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3874:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3867:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3867:3:2"
																},
																"nativeSrc": "3867:9:2",
																"nodeType": "YulFunctionCall",
																"src": "3867:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3856:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "3856:7:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3934:22:2",
																"nodeType": "YulBlock",
																"src": "3934:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3936:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "3936:16:2"
																			},
																			"nativeSrc": "3936:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3936:18:2"
																		},
																		"nativeSrc": "3936:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3936:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3905:1:2",
																						"nodeType": "YulIdentifier",
																						"src": "3905:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3898:6:2",
																					"nodeType": "YulIdentifier",
																					"src": "3898:6:2"
																				},
																				"nativeSrc": "3898:9:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3898:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3912:1:2",
																						"nodeType": "YulIdentifier",
																						"src": "3912:1:2"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3919:7:2",
																								"nodeType": "YulIdentifier",
																								"src": "3919:7:2"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3928:1:2",
																								"nodeType": "YulIdentifier",
																								"src": "3928:1:2"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3915:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "3915:3:2"
																						},
																						"nativeSrc": "3915:15:2",
																						"nodeType": "YulFunctionCall",
																						"src": "3915:15:2"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3909:2:2",
																					"nodeType": "YulIdentifier",
																					"src": "3909:2:2"
																				},
																				"nativeSrc": "3909:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3909:22:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3895:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "3895:2:2"
																		},
																		"nativeSrc": "3895:37:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3895:37:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3888:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:2"
																},
																"nativeSrc": "3888:45:2",
																"nodeType": "YulFunctionCall",
																"src": "3888:45:2"
															},
															"nativeSrc": "3885:71:2",
															"nodeType": "YulIf",
															"src": "3885:71:2"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3794:168:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3825:1:2",
														"nodeType": "YulTypedName",
														"src": "3825:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3828:1:2",
														"nodeType": "YulTypedName",
														"src": "3828:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3834:7:2",
														"nodeType": "YulTypedName",
														"src": "3834:7:2",
														"type": ""
													}
												],
												"src": "3794:168:2"
											},
											{
												"body": {
													"nativeSrc": "4013:171:2",
													"nodeType": "YulBlock",
													"src": "4013:171:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "4044:111:2",
																"nodeType": "YulBlock",
																"src": "4044:111:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4065:1:2",
																					"nodeType": "YulLiteral",
																					"src": "4065:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4072:3:2",
																							"nodeType": "YulLiteral",
																							"src": "4072:3:2",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4077:10:2",
																							"nodeType": "YulLiteral",
																							"src": "4077:10:2",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4068:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "4068:3:2"
																					},
																					"nativeSrc": "4068:20:2",
																					"nodeType": "YulFunctionCall",
																					"src": "4068:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4058:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "4058:6:2"
																			},
																			"nativeSrc": "4058:31:2",
																			"nodeType": "YulFunctionCall",
																			"src": "4058:31:2"
																		},
																		"nativeSrc": "4058:31:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "4058:31:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4109:1:2",
																					"nodeType": "YulLiteral",
																					"src": "4109:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4112:4:2",
																					"nodeType": "YulLiteral",
																					"src": "4112:4:2",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4102:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "4102:6:2"
																			},
																			"nativeSrc": "4102:15:2",
																			"nodeType": "YulFunctionCall",
																			"src": "4102:15:2"
																		},
																		"nativeSrc": "4102:15:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "4102:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4137:1:2",
																					"nodeType": "YulLiteral",
																					"src": "4137:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4140:4:2",
																					"nodeType": "YulLiteral",
																					"src": "4140:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4130:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "4130:6:2"
																			},
																			"nativeSrc": "4130:15:2",
																			"nodeType": "YulFunctionCall",
																			"src": "4130:15:2"
																		},
																		"nativeSrc": "4130:15:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "4130:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4033:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "4033:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4026:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4026:6:2"
																},
																"nativeSrc": "4026:9:2",
																"nodeType": "YulFunctionCall",
																"src": "4026:9:2"
															},
															"nativeSrc": "4023:132:2",
															"nodeType": "YulIf",
															"src": "4023:132:2"
														},
														{
															"nativeSrc": "4164:14:2",
															"nodeType": "YulAssignment",
															"src": "4164:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4173:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "4173:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4176:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "4176:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4169:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4169:3:2"
																},
																"nativeSrc": "4169:9:2",
																"nodeType": "YulFunctionCall",
																"src": "4169:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4164:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "4164:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "3967:217:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3998:1:2",
														"nodeType": "YulTypedName",
														"src": "3998:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4001:1:2",
														"nodeType": "YulTypedName",
														"src": "4001:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4007:1:2",
														"nodeType": "YulTypedName",
														"src": "4007:1:2",
														"type": ""
													}
												],
												"src": "3967:217:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"No tokens staked\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_836a526636a94307c454f30ea2efbafe870ad2c9a7e4e57da3254500dad4834c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Insufficient staking pool balanc\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Amount must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610085575f3560e01c8063a694fc3a11610058578063a694fc3a1461010f578063bd30558e14610122578063fc0c546a1461012a578063fc1c08501461013c575f80fd5b806306ee6ad8146100895780631460fa87146100b95780632def6620146100e6578063937b983b146100f0575b5f80fd5b60025461009c906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d86100c73660046104d5565b60036020525f908152604090205481565b6040519081526020016100b0565b6100ee610145565b005b6100d86100fe3660046104d5565b60046020525f908152604090205481565b6100ee61011d366004610502565b610379565b6100d8601e81565b5f5461009c906001600160a01b031681565b6100d860015481565b335f90815260036020526040902054806101995760405162461bcd60e51b815260206004820152601060248201526f139bc81d1bdad95b9cc81cdd185ad95960821b60448201526064015b60405180910390fd5b335f908152600460205260408120546101b2904261052d565b90505f6101bf8383610497565b905080600154101561021d5760405162461bcd60e51b815260206004820152602160248201527f496e73756666696369656e74207374616b696e6720706f6f6c2062616c616e636044820152606560f81b6064820152608401610190565b8060015f82825461022e919061052d565b9091555050335f8181526003602090815260408083208390556004918290528083208390559154915163a9059cbb60e01b815290810192909252602482018590526001600160a01b03169063a9059cbb906044016020604051808303815f875af115801561029e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102c29190610540565b505f5460025460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303815f875af1158015610314573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103389190610540565b50604080518481526020810183905233917ff960dbf9e5d0682f7a298ed974e33a28b4464914b7a2bfac12ae419a9afeb280910160405180910390a2505050565b5f81116103c85760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610190565b5f546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303815f875af115801561041b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061043f9190610540565b50335f908152600360205260408120805483929061045e90849061055f565b9091555050335f90815260046020526040812042905561047f908290610497565b60015f82825461048f919061055f565b909155505050565b5f8060646104a6601e86610572565b6104b09190610589565b90506301e133806104c18483610572565b6104cb9190610589565b9150505b92915050565b5f602082840312156104e5575f80fd5b81356001600160a01b03811681146104fb575f80fd5b9392505050565b5f60208284031215610512575f80fd5b5035919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156104cf576104cf610519565b5f60208284031215610550575f80fd5b815180151581146104fb575f80fd5b808201808211156104cf576104cf610519565b80820281158282048414176104cf576104cf610519565b5f826105a357634e487b7160e01b5f52601260045260245ffd5b50049056fea264697066735822122079a5e564a06818d17e7884e104f5fd27e79389a9b34d6a2b317807829c1b2c4064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA694FC3A GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xBD30558E EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xFC1C0850 EQ PUSH2 0x13C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6EE6AD8 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x1460FA87 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x937B983B EQ PUSH2 0xF0 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x9C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH2 0xEE PUSH2 0x145 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD8 PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xEE PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0x502 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH2 0xD8 PUSH1 0x1E DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x9C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xD8 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x199 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BC81D1BDAD95B9CC81CDD185AD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1B2 SWAP1 TIMESTAMP PUSH2 0x52D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1BF DUP4 DUP4 PUSH2 0x497 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD LT ISZERO PUSH2 0x21D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207374616B696E6720706F6F6C2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x190 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x52D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x4 SWAP2 DUP3 SWAP1 MSTORE DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE SWAP2 SLOAD SWAP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x29E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x540 JUMP JUMPDEST POP PUSH0 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x314 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x540 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xF960DBF9E5D0682F7A298ED974E33A28B4464914B7A2BFAC12AE419A9AFEB280 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x3C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x190 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x540 JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x45E SWAP1 DUP5 SWAP1 PUSH2 0x55F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH2 0x47F SWAP1 DUP3 SWAP1 PUSH2 0x497 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x48F SWAP2 SWAP1 PUSH2 0x55F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x64 PUSH2 0x4A6 PUSH1 0x1E DUP7 PUSH2 0x572 JUMP JUMPDEST PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0x589 JUMP JUMPDEST SWAP1 POP PUSH4 0x1E13380 PUSH2 0x4C1 DUP5 DUP4 PUSH2 0x572 JUMP JUMPDEST PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0x589 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4FB JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x512 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4CF JUMPI PUSH2 0x4CF PUSH2 0x519 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x550 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x4FB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4CF JUMPI PUSH2 0x4CF PUSH2 0x519 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4CF JUMPI PUSH2 0x4CF PUSH2 0x519 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x5A3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xA5E564A06818D17E7884E104F5FD27E79389A9B34D6A2B317807 DUP3 SWAP13 SHL 0x2C BLOCKHASH PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "120:2644:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;268:28;;;;;-1:-1:-1;;;;;268:28:1;;;;;;-1:-1:-1;;;;;178:32:2;;;160:51;;148:2;133:18;268:28:1;;;;;;;;347:49;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;659:25:2;;;647:2;632:18;347:49:1;513:177:2;892:939:1;;;:::i;:::-;;427:52;;;;;;:::i;:::-;;;;;;;;;;;;;;2230:531;;;;;;:::i;:::-;;:::i;518:32::-;;548:2;518:32;;146:19;;;;;-1:-1:-1;;;;;146:19:1;;;199:33;;;;;;892:939;969:10;931:20;954:26;;;:14;:26;;;;;;999:16;991:45;;;;-1:-1:-1;;;991:45:1;;1303:2:2;991:45:1;;;1285:21:2;1342:2;1322:18;;;1315:30;-1:-1:-1;;;1361:18:2;;;1354:46;1417:18;;991:45:1;;;;;;;;;1111:10;1049:23;1093:29;;;:17;:29;;;;;;1075:47;;:15;:47;:::i;:::-;1049:73;;1133:14;1150:47;1167:12;1181:15;1150:16;:47::i;:::-;1133:64;;1310:6;1288:18;;:28;;1280:74;;;;-1:-1:-1;;;1280:74:1;;1913:2:2;1280:74:1;;;1895:21:2;1952:2;1932:18;;;1925:30;1991:34;1971:18;;;1964:62;-1:-1:-1;;;2042:18:2;;;2035:31;2083:19;;1280:74:1;1711:397:2;1280:74:1;1429:6;1407:18;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;1499:10:1;1513:1;1484:26;;;:14;:26;;;;;;;;:30;;;1525:17;:29;;;;;;;:33;;;1645:5;;:40;;-1:-1:-1;;;1645:40:1;;;;;2287:51:2;;;;2354:18;;;2347:34;;;-1:-1:-1;;;;;1645:5:1;;:14;;2260:18:2;;1645:40:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1696:5:1;;1711:13;;1696:37;;-1:-1:-1;;;1696:37:1;;-1:-1:-1;;;;;1711:13:1;;;1696:37;;;2287:51:2;2354:18;;;2347:34;;;1696:5:1;;;:14;;2260:18:2;;1696:37:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1782:41:1;;;2848:25:2;;;2904:2;2889:18;;2882:34;;;1790:10:1;;1782:41;;2821:18:2;1782:41:1;;;;;;;920:911;;;892:939::o;2230:531::-;2298:1;2289:6;:10;2281:55;;;;-1:-1:-1;;;2281:55:1;;3129:2:2;2281:55:1;;;3111:21:2;;;3148:18;;;3141:30;3207:34;3187:18;;;3180:62;3259:18;;2281:55:1;2927:356:2;2281:55:1;2393:5;;:53;;-1:-1:-1;;;2393:53:1;;2412:10;2393:53;;;3490:51:2;2432:4:1;3557:18:2;;;3550:60;3626:18;;;3619:34;;;-1:-1:-1;;;;;2393:5:1;;;;:18;;3463::2;;2393:53:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2523:10:1;2508:26;;;;:14;:26;;;;;:36;;2538:6;;2508:26;:36;;2538:6;;2508:36;:::i;:::-;;;;-1:-1:-1;;2573:10:1;2555:29;;;;:17;:29;;;;;2587:15;2555:47;;2683:27;;2700:6;;2683:16;:27::i;:::-;2661:18;;:49;;;;;;;:::i;:::-;;;;-1:-1:-1;;;2230:531:1:o;1903:252::-;1992:7;;2058:3;2036:18;548:2;2036:12;:18;:::i;:::-;2035:26;;;;:::i;:::-;2012:49;-1:-1:-1;2108:8:1;2080:23;2095:8;2012:49;2080:23;:::i;:::-;2079:38;;;;:::i;:::-;2072:45;;;1903:252;;;;;:::o;222:286:2:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:2;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:2:o;695:180::-;754:6;807:2;795:9;786:7;782:23;778:32;775:52;;;823:1;820;813:12;775:52;-1:-1:-1;846:23:2;;695:180;-1:-1:-1;695:180:2:o;1446:127::-;1507:10;1502:3;1498:20;1495:1;1488:31;1538:4;1535:1;1528:15;1562:4;1559:1;1552:15;1578:128;1645:9;;;1666:11;;;1663:37;;;1680:18;;:::i;2392:277::-;2459:6;2512:2;2500:9;2491:7;2487:23;2483:32;2480:52;;;2528:1;2525;2518:12;2480:52;2560:9;2554:16;2613:5;2606:13;2599:21;2592:5;2589:32;2579:60;;2635:1;2632;2625:12;3664:125;3729:9;;;3750:10;;;3747:36;;;3763:18;;:::i;3794:168::-;3867:9;;;3898;;3915:15;;;3909:22;;3895:37;3885:71;;3936:18;;:::i;3967:217::-;4007:1;4033;4023:132;;4077:10;4072:3;4068:20;4065:1;4058:31;4112:4;4109:1;4102:15;4140:4;4137:1;4130:15;4023:132;-1:-1:-1;4169:9:2;;3967:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "300400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"APR()": "216",
								"stake(uint256)": "infinite",
								"stakedBalances(address)": "2504",
								"stakingPoolBalance()": "2360",
								"stakingTimestamps(address)": "2548",
								"stakingWallet()": "2326",
								"token()": "2368",
								"unstake()": "infinite"
							},
							"internal": {
								"calculateRewards(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 120,
									"end": 2764,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 120,
									"end": 2764,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 120,
									"end": 2764,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 686,
									"end": 820,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 686,
									"end": 820,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 686,
									"end": 820,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 686,
									"end": 820,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 686,
									"end": 820,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 686,
									"end": 820,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 686,
									"end": 820,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 686,
									"end": 820,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 686,
									"end": 820,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 686,
									"end": 820,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 686,
									"end": 820,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 686,
									"end": 820,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 686,
									"end": 820,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 686,
									"end": 820,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 686,
									"end": 820,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 686,
									"end": 820,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 686,
									"end": 820,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 686,
									"end": 820,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 686,
									"end": 820,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 686,
									"end": 820,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 686,
									"end": 820,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 686,
									"end": 820,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 686,
									"end": 820,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 686,
									"end": 820,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 686,
									"end": 820,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 686,
									"end": 820,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 686,
									"end": 820,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 686,
									"end": 820,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 686,
									"end": 820,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 686,
									"end": 820,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 686,
									"end": 820,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 686,
									"end": 820,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 749,
									"end": 754,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 749,
									"end": 771,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 749,
									"end": 771,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 749,
									"end": 771,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 749,
									"end": 771,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 749,
									"end": 771,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 749,
									"end": 771,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 749,
									"end": 771,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 749,
									"end": 771,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 749,
									"end": 771,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 749,
									"end": 771,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 749,
									"end": 771,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 749,
									"end": 771,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 782,
									"end": 795,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 782,
									"end": 812,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 782,
									"end": 812,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 782,
									"end": 812,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 782,
									"end": 812,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 782,
									"end": 812,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 782,
									"end": 812,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 782,
									"end": 812,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 782,
									"end": 812,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 782,
									"end": 812,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 782,
									"end": 812,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 782,
									"end": 812,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 120,
									"end": 2764,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 120,
									"end": 2764,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 120,
									"end": 2764,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 120,
									"end": 2764,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 120,
									"end": 2764,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 120,
									"end": 2764,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 2764,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 120,
									"end": 2764,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 2764,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122079a5e564a06818d17e7884e104f5fd27e79389a9b34d6a2b317807829c1b2c4064736f6c634300081a0033",
									".code": [
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "A694FC3A"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "A694FC3A"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "BD30558E"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "FC0C546A"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "FC1C0850"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "6EE6AD8"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "1460FA87"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "2DEF6620"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "937B983B"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2764,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 268,
											"end": 296,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 268,
											"end": 296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 268,
											"end": 296,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 268,
											"end": 296,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 268,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 268,
											"end": 296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 268,
											"end": 296,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 268,
											"end": 296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 268,
											"end": 296,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 268,
											"end": 296,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 268,
											"end": 296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 268,
											"end": 296,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 268,
											"end": 296,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 268,
											"end": 296,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 268,
											"end": 296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 268,
											"end": 296,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 268,
											"end": 296,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 268,
											"end": 296,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 268,
											"end": 296,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 268,
											"end": 296,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 268,
											"end": 296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 268,
											"end": 296,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 347,
											"end": 396,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 347,
											"end": 396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 347,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 347,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 347,
											"end": 396,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 347,
											"end": 396,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 347,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 347,
											"end": 396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 347,
											"end": 396,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 347,
											"end": 396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 347,
											"end": 396,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 347,
											"end": 396,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 347,
											"end": 396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 347,
											"end": 396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 347,
											"end": 396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 347,
											"end": 396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 347,
											"end": 396,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 347,
											"end": 396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 347,
											"end": 396,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 347,
											"end": 396,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 347,
											"end": 396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 347,
											"end": 396,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 347,
											"end": 396,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 347,
											"end": 396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 347,
											"end": 396,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 347,
											"end": 396,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 659,
											"end": 684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 659,
											"end": 684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 659,
											"end": 684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 647,
											"end": 649,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 632,
											"end": 650,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 347,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 513,
											"end": 690,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 892,
											"end": 1831,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 892,
											"end": 1831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 892,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 892,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 892,
											"end": 1831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 892,
											"end": 1831,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 892,
											"end": 1831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 892,
											"end": 1831,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 427,
											"end": 479,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 427,
											"end": 479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 427,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 427,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 427,
											"end": 479,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 427,
											"end": 479,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 427,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 427,
											"end": 479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 427,
											"end": 479,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 427,
											"end": 479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 427,
											"end": 479,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 427,
											"end": 479,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 427,
											"end": 479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 427,
											"end": 479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 427,
											"end": 479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 427,
											"end": 479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 427,
											"end": 479,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 427,
											"end": 479,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 427,
											"end": 479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 427,
											"end": 479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2761,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2230,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2230,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2230,
											"end": 2761,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2761,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2230,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2230,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2761,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2230,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2230,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 518,
											"end": 550,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 518,
											"end": 550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 518,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 548,
											"end": 550,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 518,
											"end": 550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 518,
											"end": 550,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 165,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 146,
											"end": 165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 146,
											"end": 165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 165,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 146,
											"end": 165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 146,
											"end": 165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 146,
											"end": 165,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 146,
											"end": 165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 146,
											"end": 165,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 199,
											"end": 232,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 199,
											"end": 232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 199,
											"end": 232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 199,
											"end": 232,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 199,
											"end": 232,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 199,
											"end": 232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 199,
											"end": 232,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 892,
											"end": 1831,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 892,
											"end": 1831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 969,
											"end": 979,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 931,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 954,
											"end": 980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 954,
											"end": 980,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 954,
											"end": 980,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 954,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 954,
											"end": 980,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 954,
											"end": 980,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 954,
											"end": 980,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 954,
											"end": 980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 954,
											"end": 980,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 954,
											"end": 980,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1015,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 991,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 991,
											"end": 1036,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 991,
											"end": 1036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1303,
											"end": 1305,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 991,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 991,
											"end": 1036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1285,
											"end": 1306,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1344,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1322,
											"end": 1340,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1322,
											"end": 1340,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1340,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1345,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81D1BDAD95B9CC81CDD185AD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1361,
											"end": 1379,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1361,
											"end": 1379,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1379,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1435,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1417,
											"end": 1435,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 991,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 991,
											"end": 1036,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1036,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1036,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 991,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1121,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1093,
											"end": 1122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1093,
											"end": 1122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1093,
											"end": 1110,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1093,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1093,
											"end": 1122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1093,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1093,
											"end": 1122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1093,
											"end": 1122,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1093,
											"end": 1122,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1075,
											"end": 1122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1090,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1075,
											"end": 1122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1122,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1075,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1167,
											"end": 1179,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1196,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1150,
											"end": 1197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1197,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1150,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1306,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1288,
											"end": 1306,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1316,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1316,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1280,
											"end": 1354,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1354,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1280,
											"end": 1354,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1280,
											"end": 1354,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1354,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1915,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1280,
											"end": 1354,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1280,
											"end": 1354,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1916,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1954,
											"name": "PUSH",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1932,
											"end": 1950,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1932,
											"end": 1950,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1950,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "496E73756666696369656E74207374616B696E6720706F6F6C2062616C616E63"
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 2026,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2042,
											"end": 2060,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2042,
											"end": 2060,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2060,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2066,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2102,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2083,
											"end": 2102,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1711,
											"end": 2108,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1354,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1280,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1435,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1435,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1435,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1435,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1407,
											"end": 1435,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1407,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1435,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1407,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1435,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1435,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1509,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1484,
											"end": 1510,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1510,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1498,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1484,
											"end": 1510,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1484,
											"end": 1510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1510,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1510,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1484,
											"end": 1510,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1510,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1510,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1514,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1514,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1542,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1558,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1558,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1650,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1650,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2338,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2287,
											"end": 2338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2287,
											"end": 2338,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2287,
											"end": 2338,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2347,
											"end": 2381,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2347,
											"end": 2381,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2347,
											"end": 2381,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1645,
											"end": 1650,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1645,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1645,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1696,
											"end": 1701,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1701,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1724,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1711,
											"end": 1724,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1711,
											"end": 1724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1724,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1724,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2338,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2347,
											"end": 2381,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2347,
											"end": 2381,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2347,
											"end": 2381,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1701,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1701,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1710,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1696,
											"end": 1710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1696,
											"end": 1733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1696,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1782,
											"end": 1823,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1782,
											"end": 1823,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 1823,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2904,
											"end": 2906,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2889,
											"end": 2907,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2907,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2916,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2916,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2916,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1800,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1800,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 1823,
											"name": "PUSH",
											"source": 1,
											"value": "F960DBF9E5D0682F7A298ED974E33A28B4464914B7A2BFAC12AE419A9AFEB280"
										},
										{
											"begin": 1782,
											"end": 1823,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2821,
											"end": 2839,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1782,
											"end": 1823,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1782,
											"end": 1823,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 1823,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 1823,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 1823,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 1823,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 1823,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 892,
											"end": 1831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2761,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2230,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2289,
											"end": 2295,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2289,
											"end": 2299,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2281,
											"end": 2336,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2336,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2281,
											"end": 2336,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2281,
											"end": 2336,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2336,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3129,
											"end": 3131,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2336,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2281,
											"end": 2336,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3111,
											"end": 3132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3132,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3166,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3148,
											"end": 3166,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3166,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3141,
											"end": 3171,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3207,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 3187,
											"end": 3205,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3187,
											"end": 3205,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3187,
											"end": 3205,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3180,
											"end": 3242,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3259,
											"end": 3277,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3259,
											"end": 3277,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2927,
											"end": 3283,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2336,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2281,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2398,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2422,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3541,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2432,
											"end": 2436,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3550,
											"end": 3610,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3626,
											"end": 3644,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3626,
											"end": 3644,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3626,
											"end": 3644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3619,
											"end": 3653,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3619,
											"end": 3653,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3619,
											"end": 3653,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2393,
											"end": 2398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2398,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2411,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 2393,
											"end": 2411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3481,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3463,
											"end": 3481,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2393,
											"end": 2446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2523,
											"end": 2533,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2534,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2534,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2508,
											"end": 2534,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2508,
											"end": 2534,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2534,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2508,
											"end": 2534,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2534,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2544,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2544,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2544,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2544,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2508,
											"end": 2544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2544,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2508,
											"end": 2544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2544,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2508,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2544,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2573,
											"end": 2583,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2555,
											"end": 2584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2584,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2572,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2555,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2555,
											"end": 2584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 2584,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2584,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2602,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2602,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2602,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2683,
											"end": 2710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2683,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2710,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2683,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2679,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2661,
											"end": 2679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2661,
											"end": 2710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2710,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2661,
											"end": 2710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2661,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2710,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2661,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2710,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2230,
											"end": 2761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 2155,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1903,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 1999,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1999,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2061,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2036,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 548,
											"end": 550,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 2036,
											"end": 2048,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2036,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2054,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2036,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2035,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2035,
											"end": 2061,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2035,
											"end": 2061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2035,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2035,
											"end": 2061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2035,
											"end": 2061,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2035,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2108,
											"end": 2116,
											"name": "PUSH",
											"source": 1,
											"value": "1E13380"
										},
										{
											"begin": 2080,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2095,
											"end": 2103,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2061,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2080,
											"end": 2103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2103,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2080,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2079,
											"end": 2117,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2079,
											"end": 2117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2117,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2079,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2117,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 2155,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1903,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 2155,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 2155,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 2155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 2155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 2155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 222,
											"end": 508,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 222,
											"end": 508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 281,
											"end": 287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 336,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 322,
											"end": 331,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 313,
											"end": 320,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 309,
											"end": 332,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 305,
											"end": 337,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 302,
											"end": 354,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 302,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 350,
											"end": 351,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 348,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 340,
											"end": 352,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 302,
											"end": 354,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 376,
											"end": 399,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 376,
											"end": 399,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 459,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 428,
											"end": 459,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 418,
											"end": 460,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 418,
											"end": 460,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 408,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 474,
											"end": 475,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 472,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 464,
											"end": 476,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 408,
											"end": 478,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 497,
											"end": 502,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 222,
											"end": 508,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 222,
											"end": 508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 695,
											"end": 875,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 695,
											"end": 875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 754,
											"end": 760,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 809,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 795,
											"end": 804,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 786,
											"end": 793,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 782,
											"end": 805,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 778,
											"end": 810,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 775,
											"end": 827,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 775,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 775,
											"end": 827,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 821,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 813,
											"end": 825,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 775,
											"end": 827,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 775,
											"end": 827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 846,
											"end": 869,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 846,
											"end": 869,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 695,
											"end": 875,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 695,
											"end": 875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1573,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1446,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1517,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 1502,
											"end": 1505,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1498,
											"end": 1518,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1519,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1535,
											"end": 1536,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1528,
											"end": 1543,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1566,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1559,
											"end": 1560,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1567,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1706,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1578,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 1654,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 1654,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 1654,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1677,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1700,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1663,
											"end": 1700,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1680,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2669,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2392,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2459,
											"end": 2465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2514,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2509,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2498,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2487,
											"end": 2510,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2515,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2532,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2480,
											"end": 2532,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2526,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2530,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2532,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2480,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2560,
											"end": 2569,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2570,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2618,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2619,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2599,
											"end": 2620,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2621,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2579,
											"end": 2639,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 2636,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2633,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2625,
											"end": 2637,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3664,
											"end": 3789,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3664,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3760,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3760,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 3783,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3747,
											"end": 3783,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3763,
											"end": 3781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3794,
											"end": 3962,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3794,
											"end": 3962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3876,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3876,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3898,
											"end": 3907,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3898,
											"end": 3907,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3915,
											"end": 3930,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3915,
											"end": 3930,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3915,
											"end": 3930,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 3931,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 3931,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3895,
											"end": 3932,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3885,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3885,
											"end": 3956,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3936,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3936,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3936,
											"end": 3954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3967,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3967,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4007,
											"end": 4008,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4033,
											"end": 4034,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4023,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4023,
											"end": 4155,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4077,
											"end": 4087,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 4072,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 4068,
											"end": 4088,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4089,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4112,
											"end": 4116,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 4109,
											"end": 4110,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4102,
											"end": 4117,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4140,
											"end": 4144,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4137,
											"end": 4138,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4130,
											"end": 4145,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4023,
											"end": 4155,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4023,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4169,
											"end": 4178,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4178,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3967,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"FCC2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"APR()": "bd30558e",
							"stake(uint256)": "a694fc3a",
							"stakedBalances(address)": "1460fa87",
							"stakingPoolBalance()": "fc1c0850",
							"stakingTimestamps(address)": "937b983b",
							"stakingWallet()": "06ee6ad8",
							"token()": "fc0c546a",
							"unstake()": "2def6620"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"APR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPoolBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingTimestamps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"FCC2.sol\":\"Staking\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"FCC2.sol\":{\"keccak256\":\"0x1defba1da63fbea57de09346c8588c0829d867d47c1b8404032f86a693acd226\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85dd7e1fbfaed795945a21bca16db6b04f3ddc9d47afb12db1d997e868309b39\",\"dweb:/ipfs/QmagdJYj4inXWGyVtRZLQMZSnnceGbpokfF5YZK1BKAhZh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 83,
								"contract": "FCC2.sol:Staking",
								"label": "token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 85,
								"contract": "FCC2.sol:Staking",
								"label": "stakingPoolBalance",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 87,
								"contract": "FCC2.sol:Staking",
								"label": "stakingWallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 91,
								"contract": "FCC2.sol:Staking",
								"label": "stakedBalances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 95,
								"contract": "FCC2.sol:Staking",
								"label": "stakingTimestamps",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "214:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "396:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "405:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "427:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "447:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:0"
									},
									"src": "390:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "627:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "636:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "659:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "684:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:0"
									},
									"src": "621:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "821:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:0"
									},
									"scope": 77,
									"src": "775:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1222:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1234:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1267:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:0"
									},
									"scope": 77,
									"src": "1204:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1567:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1622:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:0"
									},
									"scope": 77,
									"src": "1548:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2343:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2376:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:0"
									},
									"scope": 77,
									"src": "2309:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2712:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2726:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2738:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:0"
									},
									"scope": 77,
									"src": "2690:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "204:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2674:0"
				},
				"id": 0
			},
			"FCC2.sol": {
				"ast": {
					"absolutePath": "FCC2.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"Staking": [
							281
						]
					},
					"id": 282,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 282,
							"sourceUnit": 78,
							"src": "60:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Staking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 281,
							"linearizedBaseContracts": [
								281
							],
							"name": "Staking",
							"nameLocation": "129:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 83,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "160:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 281,
									"src": "146:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 82,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 81,
											"name": "IERC20",
											"nameLocations": [
												"146:6:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "146:6:1"
										},
										"referencedDeclaration": 77,
										"src": "146:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc1c0850",
									"id": 85,
									"mutability": "mutable",
									"name": "stakingPoolBalance",
									"nameLocation": "214:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 281,
									"src": "199:33:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 84,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "199:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06ee6ad8",
									"id": 87,
									"mutability": "mutable",
									"name": "stakingWallet",
									"nameLocation": "283:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 281,
									"src": "268:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 86,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "268:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1460fa87",
									"id": 91,
									"mutability": "mutable",
									"name": "stakedBalances",
									"nameLocation": "382:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 281,
									"src": "347:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 90,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 88,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "355:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "347:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 89,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "366:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "937b983b",
									"id": 95,
									"mutability": "mutable",
									"name": "stakingTimestamps",
									"nameLocation": "462:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 281,
									"src": "427:52:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 94,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 92,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "435:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "427:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 93,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "446:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "bd30558e",
									"id": 98,
									"mutability": "constant",
									"name": "APR",
									"nameLocation": "542:3:1",
									"nodeType": "VariableDeclaration",
									"scope": 281,
									"src": "518:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "518:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 97,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "548:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_30_by_1",
											"typeString": "int_const 30"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "f960dbf9e5d0682f7a298ed974e33a28b4464914b7a2bfac12ae419a9afeb280",
									"id": 106,
									"name": "Unstake",
									"nameLocation": "610:7:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "634:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "618:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakedAmount",
												"nameLocation": "648:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "640:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "670:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "662:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "662:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:60:1"
									},
									"src": "604:74:1"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "738:82:1",
										"statements": [
											{
												"expression": {
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 113,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "749:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 115,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 108,
																"src": "764:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 114,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "757:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "757:14:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "749:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "749:22:1"
											},
											{
												"expression": {
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 119,
														"name": "stakingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "782:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 120,
														"name": "_stakingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "798:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "782:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "782:30:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "706:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "698:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "_stakingWallet",
												"nameLocation": "722:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "714:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:40:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "738:0:1"
									},
									"scope": 281,
									"src": "686:134:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "920:911:1",
										"statements": [
											{
												"assignments": [
													128
												],
												"declarations": [
													{
														"constant": false,
														"id": 128,
														"mutability": "mutable",
														"name": "stakedAmount",
														"nameLocation": "939:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 205,
														"src": "931:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 127,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "931:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 133,
												"initialValue": {
													"baseExpression": {
														"id": 129,
														"name": "stakedBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "954:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 132,
													"indexExpression": {
														"expression": {
															"id": 130,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "969:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "973:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "969:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "954:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "931:49:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 135,
																"name": "stakedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 128,
																"src": "999:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1014:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "999:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e73207374616b6564",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b",
																"typeString": "literal_string \"No tokens staked\""
															},
															"value": "No tokens staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b",
																"typeString": "literal_string \"No tokens staked\""
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "991:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "991:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "991:45:1"
											},
											{
												"assignments": [
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "stakingDuration",
														"nameLocation": "1057:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 205,
														"src": "1049:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 141,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1049:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 150,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 143,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1075:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1081:9:1",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1075:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 145,
															"name": "stakingTimestamps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "1093:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 148,
														"indexExpression": {
															"expression": {
																"id": 146,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1111:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1115:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1111:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1093:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1075:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1049:73:1"
											},
											{
												"assignments": [
													152
												],
												"declarations": [
													{
														"constant": false,
														"id": 152,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "1141:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 205,
														"src": "1133:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 151,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1133:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 157,
												"initialValue": {
													"arguments": [
														{
															"id": 154,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "1167:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 155,
															"name": "stakingDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "1181:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 153,
														"name": "calculateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "1150:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1150:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1133:64:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 159,
																"name": "stakingPoolBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "1288:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 160,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "1310:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1288:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207374616b696e6720706f6f6c2062616c616e6365",
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1318:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_836a526636a94307c454f30ea2efbafe870ad2c9a7e4e57da3254500dad4834c",
																"typeString": "literal_string \"Insufficient staking pool balance\""
															},
															"value": "Insufficient staking pool balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_836a526636a94307c454f30ea2efbafe870ad2c9a7e4e57da3254500dad4834c",
																"typeString": "literal_string \"Insufficient staking pool balance\""
															}
														],
														"id": 158,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1280:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1280:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1280:74:1"
											},
											{
												"expression": {
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 165,
														"name": "stakingPoolBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "1407:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 166,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "1429:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1407:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "1407:28:1"
											},
											{
												"expression": {
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 169,
															"name": "stakedBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "1484:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 172,
														"indexExpression": {
															"expression": {
																"id": 170,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1499:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1503:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1499:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1484:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1513:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1484:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "1484:30:1"
											},
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 176,
															"name": "stakingTimestamps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "1525:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 179,
														"indexExpression": {
															"expression": {
																"id": 177,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1543:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1547:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1543:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1525:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1557:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1525:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1525:33:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 186,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1660:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1664:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1660:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 188,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "1672:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 183,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "1645:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1651:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1645:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1645:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "1645:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 194,
															"name": "stakingWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "1711:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 195,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1726:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 191,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "1696:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1702:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1696:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1696:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "1696:37:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 199,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1790:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1794:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1790:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 201,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "1802:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 202,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1816:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 198,
														"name": "Unstake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "1782:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1782:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 204,
												"nodeType": "EmitStatement",
												"src": "1777:46:1"
											}
										]
									},
									"functionSelector": "2def6620",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "901:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:1"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "920:0:1"
									},
									"scope": 281,
									"src": "892:939:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "2001:154:1",
										"statements": [
											{
												"assignments": [
													216
												],
												"declarations": [
													{
														"constant": false,
														"id": 216,
														"mutability": "mutable",
														"name": "yearlyReward",
														"nameLocation": "2020:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 232,
														"src": "2012:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 215,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2012:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 223,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 217,
																	"name": "stakedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "2036:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 218,
																	"name": "APR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "2051:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2036:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 220,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2035:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2058:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "2035:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2012:49:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 224,
																	"name": "yearlyReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "2080:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 225,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "2095:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2080:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 227,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2079:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"hexValue": "333635",
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2108:8:1",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_31536000_by_1",
																	"typeString": "int_const 31536000"
																},
																"value": "365"
															}
														],
														"id": 229,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2107:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31536000_by_1",
															"typeString": "int_const 31536000"
														}
													},
													"src": "2079:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 231,
												"nodeType": "Return",
												"src": "2072:45:1"
											}
										]
									},
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRewards",
									"nameLocation": "1912:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "stakedAmount",
												"nameLocation": "1937:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1929:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1929:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "1959:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1951:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1951:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1928:40:1"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1992:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1992:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1991:9:1"
									},
									"scope": 281,
									"src": "1903:252:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "2270:491:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 239,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "2289:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2298:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2289:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2301:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2281:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2281:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "2281:55:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 248,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2412:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2416:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2412:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 252,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2432:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$281",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$281",
																		"typeString": "contract Staking"
																	}
																],
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2424:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 250,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2424:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2424:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "2439:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 245,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2393:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2399:12:1",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "2393:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2393:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "2393:53:1"
											},
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 257,
															"name": "stakedBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "2508:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 260,
														"indexExpression": {
															"expression": {
																"id": 258,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2523:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2527:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2523:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2508:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 261,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "2538:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2508:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "2508:36:1"
											},
											{
												"expression": {
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 264,
															"name": "stakingTimestamps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "2555:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 267,
														"indexExpression": {
															"expression": {
																"id": 265,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2573:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2577:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2573:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2555:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 268,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2587:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2593:9:1",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2587:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2555:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "2555:47:1"
											},
											{
												"expression": {
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 272,
														"name": "stakingPoolBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "2661:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 274,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "2700:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2708:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 273,
															"name": "calculateRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "2683:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2683:27:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2661:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "2661:49:1"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "2239:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2253:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "2245:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2245:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2244:16:1"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2270:0:1"
									},
									"scope": 281,
									"src": "2230:531:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 282,
							"src": "120:2644:1",
							"usedErrors": [],
							"usedEvents": [
								106
							]
						}
					],
					"src": "33:2735:1"
				},
				"id": 1
			}
		}
	}
}